{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  console.log(data);\n  useEffect(function () {\n    fetch('https://google.com').then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setData(json);\n    }).catch(function (error) {\n      return console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 24\n    }\n  }, isLoading ? React.createElement(Text, null, \"Loading...\") : React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'space-between'\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      color: 'green',\n      textAlign: 'center'\n    }\n  }, data.title), React.createElement(Text, {\n    style: {\n      fontSize: 14,\n      color: 'green',\n      textAlign: 'center',\n      paddingBottom: 10\n    }\n  }, \"Articles:\"), React.createElement(FlatList, {\n    data: data.articles,\n    keyExtractor: function keyExtractor(_ref, index) {\n      var id = _ref.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Text, null, item.id + '. ' + item.title);\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/DÃ©castel/Documents/CoursReactNative-main/App.js"],"names":["React","useEffect","useState","App","isLoading","setLoading","data","setData","console","log","fetch","then","response","json","catch","error","finally","flex","padding","flexDirection","justifyContent","fontSize","color","textAlign","title","paddingBottom","articles","index","id","item"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA4C,OAA5C;;;;AAIA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAgCD,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOE,SAAP;AAAA,MAAkBC,UAAlB;;AACA,mBAAwBH,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,OAAb;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,KAAK,CAAC,oBAAD,CAAL,CACGC,IADH,CACQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACE,IAAD;AAAA,aAAUN,OAAO,CAACM,IAAD,CAAjB;AAAA,KAFR,EAGGC,KAHH,CAGS,UAACC,KAAD;AAAA,aAAWP,OAAO,CAACO,KAAR,CAAcA,KAAd,CAAX;AAAA,KAHT,EAIGC,OAJH,CAIW;AAAA,aAAMX,UAAU,CAAC,KAAD,CAAhB;AAAA,KAJX;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,SAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEY,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE;AAApB;AAAb,KACGd,SAAS,GAAG,oBAAC,IAAD,qBAAH,GACR,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEa,MAAAA,IAAI,EAAE,CAAR;AAAWE,MAAAA,aAAa,EAAE,QAA1B;AAAoCC,MAAAA,cAAc,EAAG;AAArD;AAAb,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,KAAK,EAAE,OAAvB;AAAgCC,MAAAA,SAAS,EAAE;AAA3C;AAAb,KAAoEjB,IAAI,CAACkB,KAAzE,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEH,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,KAAK,EAAE,OAAvB;AAAgCC,MAAAA,SAAS,EAAE,QAA3C;AAAqDE,MAAAA,aAAa,EAAE;AAApE;AAAb,iBAFF,EAGE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEnB,IAAI,CAACoB,QADb;AAEE,IAAA,YAAY,EAAE,4BAASC,KAAT;AAAA,UAAGC,EAAH,QAAGA,EAAH;AAAA,aAAmBA,EAAnB;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,IAAD,QAAOA,IAAI,CAACD,EAAL,GAAU,IAAV,GAAiBC,IAAI,CAACL,KAA7B,CADU;AAAA;AAHd,IAHF,CAFJ,CAFF;AAkBD","sourcesContent":["\nimport React, { useEffect, useState }  from 'react';\n\nimport { FlatList, Text, View } from 'react-native';\n\nexport default function App() {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  console.log(data);\n\n  useEffect(() => {\n    fetch('https://google.com')\n      .then((response) => response.json())\n      .then((json) => setData(json))\n      .catch((error) => console.error(error))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n\n    <View style={{ flex: 1, padding: 24 }}>\n      {isLoading ? <Text>Loading...</Text> : \n      ( <View style={{ flex: 1, flexDirection: 'column', justifyContent:  'space-between'}}>\n          <Text style={{ fontSize: 18, color: 'green', textAlign: 'center'}}>{data.title}</Text>\n          <Text style={{ fontSize: 14, color: 'green', textAlign: 'center', paddingBottom: 10}}>Articles:</Text>\n          <FlatList\n            data={data.articles}\n            keyExtractor={({ id }, index) => id}\n            renderItem={({ item }) => (\n              <Text>{item.id + '. ' + item.title}</Text>\n            )}\n          />\n        </View>\n      )}\n    </View>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}