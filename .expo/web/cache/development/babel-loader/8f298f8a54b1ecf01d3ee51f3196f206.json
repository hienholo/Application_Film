{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { connect } from 'react-redux';\nimport { changeCount } from \"./actions/counts\";\nimport { bindActionCreators } from 'redux';\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"decrementCount\",\n    value: function decrementCount() {\n      var _this$props = this.props,\n          count = _this$props.count,\n          actions = _this$props.actions;\n      count--;\n      actions.changeCount(count);\n    }\n  }, {\n    key: \"incrementCount\",\n    value: function incrementCount() {\n      var _this$props2 = this.props,\n          count = _this$props2.count,\n          actions = _this$props2.actions;\n      count++;\n      actions.changeCount(count);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var count = this.props.count;\n      return React.createElement(View, {\n        styles: styles.container\n      }, React.createElement(Button, {\n        title: \"increment\",\n        onPress: function onPress() {\n          return _this.incrementCount();\n        }\n      }), React.createElement(Text, null, count), React.createElement(Button, {\n        title: \"decrement\",\n        onPress: function onPress() {\n          return _this.decrementCount();\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    count: state.count\n  };\n};\n\nvar ActionCreators = _extends({}, changeCount);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(ActionCreators, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/DÃ©castel/Documents/CoursReactNative-main/App.js"],"names":["React","Component","connect","changeCount","bindActionCreators","App","props","count","actions","styles","container","incrementCount","decrementCount","StyleSheet","create","flex","justifyContent","alignItems","mapStateToProps","state","ActionCreators","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;AAQC,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAOA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT;AACA,SAASC,kBAAT,QAAmC,OAAnC;;IAGMC,G;;;;;;;;;;;;;WACJ,0BAAiB;AACf,wBAAyB,KAAKC,KAA9B;AAAA,UAAMC,KAAN,eAAMA,KAAN;AAAA,UAAaC,OAAb,eAAaA,OAAb;AACAD,MAAAA,KAAK;AACLC,MAAAA,OAAO,CAACL,WAAR,CAAoBI,KAApB;AACD;;;WACD,0BAAiB;AACf,yBAAyB,KAAKD,KAA9B;AAAA,UAAMC,KAAN,gBAAMA,KAAN;AAAA,UAAaC,OAAb,gBAAaA,OAAb;AACAD,MAAAA,KAAK;AACLC,MAAAA,OAAO,CAACL,WAAR,CAAoBI,KAApB;AACD;;;WACD,kBAAS;AAAA;;AACP,UAAQA,KAAR,GAAkB,KAAKD,KAAvB,CAAQC,KAAR;AACA,aACE,oBAAC,IAAD;AAAM,QAAA,MAAM,EAAEE,MAAM,CAACC;AAArB,SACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACC,cAAL,EAAN;AAAA;AAFX,QADF,EAKE,oBAAC,IAAD,QAAOJ,KAAP,CALF,EAME,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACK,cAAL,EAAN;AAAA;AAFX,QANF,CADF;AAaD;;;;EA1BeX,S;;AA2BjB;AAED,IAAMQ,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE;AAHH;AADoB,CAAlB,CAAf;;AAQA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCZ,IAAAA,KAAK,EAAEY,KAAK,CAACZ;AADmB,GAAL;AAAA,CAA7B;;AAIA,IAAMa,cAAc,GAAG,SACrB,EADqB,EAErBjB,WAFqB,CAAvB;;AAIA,IAAMkB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCd,IAAAA,OAAO,EAAEJ,kBAAkB,CAACgB,cAAD,EAAiBE,QAAjB;AADW,GAAL;AAAA,CAAnC;;AAIA,eAAepB,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,GAA7C,CAAf","sourcesContent":["/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow\n */\n\n import React, { Component } from 'react';\n import {\n   StyleSheet,\n   View,\n   Button,\n   Text\n } from 'react-native';\n import { connect } from 'react-redux';\n import { changeCount } from './actions/counts';\n import { bindActionCreators } from 'redux';\n \n \n class App extends Component {\n   decrementCount() {\n     let { count, actions } = this.props;\n     count--;\n     actions.changeCount(count);\n   }\n   incrementCount() {\n     let { count, actions } = this.props;\n     count++;\n     actions.changeCount(count);\n   }\n   render() {\n     const { count } = this.props;\n     return (\n       <View styles={styles.container}>\n         <Button\n           title=\"increment\"\n           onPress={() => this.incrementCount()}\n         />\n         <Text>{count}</Text>\n         <Button\n           title=\"decrement\"\n           onPress={() => this.decrementCount()}\n         />\n       </View>\n     );\n   }\n };\n \n const styles = StyleSheet.create({\n   container: {\n     flex: 1,\n     justifyContent: 'center',\n     alignItems: 'center'\n   }\n });\n \n const mapStateToProps = state => ({\n   count: state.count,\n });\n \n const ActionCreators = Object.assign(\n   {},\n   changeCount,\n );\n const mapDispatchToProps = dispatch => ({\n   actions: bindActionCreators(ActionCreators, dispatch),\n });\n \n export default connect(mapStateToProps, mapDispatchToProps)(App)"]},"metadata":{},"sourceType":"module"}