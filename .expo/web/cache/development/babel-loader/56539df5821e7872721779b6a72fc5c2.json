{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Movie from \"../models/Movie\";\nimport MovieItem from \"../components/MovieItem\";\nimport RecentMovieItem from \"../components/RecentMovieItem\";\nRecentMovieItem;\nimport Constants from \"expo-constants\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport Autocomplete from \"react-native-autocomplete-input\";\nimport { IMLocalized } from \"../IMLocalized\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Home = function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n    _this.deviceWidth = Dimensions.get(\"window\").width;\n    _this._isMount = false;\n    _this.baseUrl = \"http://api.themoviedb.org/3/movie/\";\n    _this.apiKey = \"802b2c4b88ea1183e50e6b285a27696e\";\n    _this.genres = [];\n    _this.state = {\n      recentMovies: [],\n      popularMovies: [],\n      recentMovies: [],\n      queryResult: [],\n      query: \"\",\n      iconName: \"magnify\",\n      isAnimating: false,\n      fadeAnim: new Animated.Value(24)\n    };\n\n    _this.searchData = function (query) {\n      return fetch(\"https://api.themoviedb.org/3/search/movie?api_key=\" + _this.apiKey + \"&language=en-US&query=\" + query).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        var moviedata = [];\n        var allgenres = _this.genres;\n        responseJson.results.forEach(function (movie) {\n          movie.genres = [];\n          movie.genre_ids.forEach(function (genreid) {\n            var genreData = allgenres.filter(function (x) {\n              return x.id == genreid;\n            });\n\n            if (genreData.length != 0) {\n              movie.genres.push(genreData[0].name);\n            }\n          });\n          moviedata.push(new Movie({\n            id: movie.id,\n            title: movie.title,\n            poster_path: movie.poster_path == null ? \"https://lightning.od-cdn.com/25.2.6-build-2536-master/public/img/no-cover_en_US.jpg\" : \"http://image.tmdb.org/t/p/w342/\" + movie.poster_path,\n            backdrop_path: \"http://image.tmdb.org/t/p/w500/\" + movie.backdrop_path,\n            genre_ids: movie.genre_ids,\n            overview: movie.overview,\n            popularity: movie.popularity,\n            release_date: movie.release_date,\n            vote_average: movie.vote_average,\n            vote_count: movie.vote_count,\n            genres: movie.genres\n          }));\n\n          _this.setState({\n            query: query,\n            queryResult: moviedata\n          });\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    };\n\n    _this.handleSelect = function () {\n      _this.setState({\n        isAnimating: true\n      });\n\n      _this.state.fadeAnim._value != _this.deviceWidth - 24 ? Animated.timing(_this.state.fadeAnim, {\n        toValue: _this.deviceWidth - 24,\n        duration: 500,\n        useNativeDriver: false\n      }).start(function () {\n        _this.setState({\n          iconName: \"close\"\n        });\n\n        _this.setState({\n          isAnimating: false\n        });\n      }) : Animated.timing(_this.state.fadeAnim, {\n        toValue: 24,\n        duration: 500,\n        useNativeDriver: false\n      }).start(function () {\n        _this.setState({\n          iconName: \"magnify\",\n          query: \"\",\n          queryResult: []\n        });\n\n        _this.setState({\n          isAnimating: false\n        });\n      });\n    };\n\n    _this.renderRectangle = function (context) {\n      var isDarkMode = context.isDarkMode,\n          light = context.light,\n          dark = context.dark;\n      var customStyle = {\n        width: _this.state.fadeAnim\n      };\n      return _jsx(Animated.View, {\n        style: [styles.rectangle, customStyle],\n        children: _jsx(TouchableWithoutFeedback, {\n          style: {\n            width: 24,\n            height: 40,\n            justifyContent: \"center\"\n          },\n          onPress: function onPress() {\n            return _this.handleSelect();\n          },\n          children: _jsx(MaterialCommunityIcons, {\n            name: _this.state.iconName,\n            color: isDarkMode ? light.bg : dark.bg,\n            size: 24\n          })\n        })\n      });\n    };\n\n    _this.genres = props.genres;\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMount = true;\n      return fetch(this.baseUrl + \"popular?api_key=\" + this.apiKey).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        var data = [];\n        var allgenres = _this2.genres;\n        responseJson.results.forEach(function (movie) {\n          movie.genres = [];\n          movie.genre_ids.forEach(function (genreid) {\n            var genreData = allgenres.filter(function (x) {\n              return x.id == genreid;\n            });\n\n            if (genreData.length != 0) {\n              movie.genres.push(genreData[0].name);\n            }\n          });\n          data.push(new Movie({\n            id: movie.id,\n            title: movie.title,\n            poster_path: movie.poster_path == null ? \"https://lightning.od-cdn.com/25.2.6-build-2536-master/public/img/no-cover_en_US.jpg\" : \"http://image.tmdb.org/t/p/w342/\" + movie.poster_path,\n            backdrop_path: \"http://image.tmdb.org/t/p/w500/\" + movie.backdrop_path,\n            genre_ids: movie.genre_ids,\n            overview: movie.overview,\n            popularity: movie.popularity,\n            release_date: movie.release_date,\n            vote_average: movie.vote_average,\n            vote_count: movie.vote_count,\n            genres: movie.genres\n          }));\n        });\n\n        if (_this2._isMount) {\n          _this2.setState({\n            popularMovies: data\n          });\n        }\n\n        fetch(_this2.baseUrl + \"now_playing?api_key=\" + _this2.apiKey).then(function (response) {\n          return response.json();\n        }).then(function (responseJson) {\n          var data = [];\n          var allgenres = _this2.genres;\n          responseJson.results.forEach(function (movie) {\n            movie.genres = [];\n            movie.genre_ids.forEach(function (genreid) {\n              var genreData = allgenres.filter(function (x) {\n                return x.id == genreid;\n              });\n\n              if (genreData.length != 0) {\n                movie.genres.push(genreData[0].name);\n              }\n            });\n            data.push(new Movie({\n              id: movie.id,\n              title: movie.title,\n              poster_path: movie.poster_path == null ? \"https://lightning.od-cdn.com/25.2.6-build-2536-master/public/img/no-cover_en_US.jpg\" : \"http://image.tmdb.org/t/p/w342/\" + movie.poster_path,\n              backdrop_path: \"http://image.tmdb.org/t/p/w500/\" + movie.backdrop_path,\n              genre_ids: movie.genre_ids,\n              overview: movie.overview,\n              popularity: movie.popularity,\n              release_date: movie.release_date,\n              vote_average: movie.vote_average,\n              vote_count: movie.vote_count,\n              genres: movie.genres\n            }));\n          });\n\n          if (_this2._isMount) {\n            _this2.setState({\n              recentMovies: data\n            });\n          }\n        }).catch(function (error) {\n          return console.error(error);\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMount = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _jsx(ThemeContext.Consumer, {\n        children: function children(context) {\n          var isDarkMode = context.isDarkMode,\n              light = context.light,\n              dark = context.dark;\n          return _jsxs(View, {\n            style: [styles.container, {\n              backgroundColor: isDarkMode ? dark.bg : light.bg\n            }],\n            children: [_jsx(StatusBar, {\n              style: isDarkMode ? \"light\" : \"dark\"\n            }), _jsxs(View, {\n              style: styles.header,\n              children: [!_this3.state.isAnimating && _this3.state.iconName == \"magnify\" ? _jsxs(View, {\n                style: {\n                  flexWrap: \"wrap\",\n                  justifyContent: \"center\",\n                  flexDirection: \"row\"\n                },\n                children: [_jsx(MaterialCommunityIcons, {\n                  style: {\n                    marginRight: 5\n                  },\n                  name: \"movie\",\n                  color: isDarkMode ? light.bg : dark.bg,\n                  size: 30\n                }), _jsx(Text, {\n                  style: [styles.title, {\n                    color: isDarkMode ? light.bg : dark.bg\n                  }],\n                  children: \"Movie Catch\"\n                })]\n              }) : _jsx(View, {}), _jsx(View, {\n                style: {\n                  flexWrap: \"wrap\"\n                },\n                children: _this3.renderRectangle(context)\n              })]\n            }), !_this3.state.isAnimating && _this3.state.iconName == \"close\" ? _jsx(Autocomplete, {\n              style: {\n                backgroundColor: \"transparent\",\n                fontFamily: \"poppins-l\"\n              },\n              data: _this3.state.queryResult,\n              placeholder: IMLocalized(\"searchhint\"),\n              autoFocus: true,\n              placeholderTextColor: isDarkMode ? light.bg : dark.bg,\n              keyExtractor: function keyExtractor(item, i) {\n                return item.id.toString();\n              },\n              containerStyle: {\n                paddingHorizontal: 20,\n                position: \"absolute\",\n                top: Platform.OS == \"ios\" ? 65 : 40,\n                paddingLeft: 60,\n                height: 40,\n                width: \"100%\"\n              },\n              inputContainerStyle: {\n                borderWidth: 0,\n                height: 40\n              },\n              listStyle: {\n                maxHeight: 300,\n                zIndex: 999\n              },\n              onChangeText: function onChangeText(text) {\n                _this3.searchData(text);\n              },\n              renderItem: function renderItem(_ref) {\n                var item = _ref.item,\n                    i = _ref.i;\n                return _jsx(TouchableWithoutFeedback, {\n                  onPress: function onPress() {\n                    _this3.props.navigation.navigate(\"MovieDetail\", {\n                      item: item\n                    });\n                  },\n                  children: _jsxs(View, {\n                    style: {\n                      flex: 1,\n                      flexDirection: \"row\",\n                      marginBottom: 10\n                    },\n                    children: [_jsx(Image, {\n                      style: {\n                        width: 38,\n                        height: 57\n                      },\n                      source: {\n                        uri: item.poster_path\n                      }\n                    }), _jsxs(View, {\n                      style: {\n                        flexWrap: \"wrap\",\n                        flexDirection: \"column\",\n                        marginLeft: 5,\n                        justifyContent: \"center\"\n                      },\n                      children: [_jsx(Text, {\n                        children: item.title\n                      }), _jsx(Text, {\n                        children: item.release_date\n                      })]\n                    })]\n                  })\n                });\n              }\n            }) : _jsx(View, {}), _jsxs(ScrollView, {\n              scrollEnabled: _this3.state.query == \"\" ? true : false,\n              children: [_jsxs(View, {\n                style: {\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  paddingHorizontal: 20,\n                  marginVertical: 15\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    fontFamily: \"poppins-r\",\n                    color: isDarkMode ? light.bg : dark.bg\n                  },\n                  children: IMLocalized(\"popularmovies\")\n                }), _jsx(TouchableWithoutFeedback, {\n                  onPress: function onPress() {\n                    return _this3.props.navigation.navigate(\"ViewAll\", {\n                      genres: _this3.genres,\n                      isPopular: true\n                    });\n                  },\n                  children: _jsxs(View, {\n                    style: {\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"center\"\n                    },\n                    children: [_jsx(Text, {\n                      style: {\n                        fontFamily: \"poppins-sb\",\n                        color: isDarkMode ? light.bg : dark.bg\n                      },\n                      children: IMLocalized(\"viewall\")\n                    }), _jsx(MaterialCommunityIcons, {\n                      name: \"chevron-right\",\n                      size: 20,\n                      color: isDarkMode ? light.bg : dark.bg\n                    })]\n                  })\n                })]\n              }), _jsx(ScrollView, {\n                horizontal: true,\n                scrollEnabled: _this3.state.query == \"\" ? true : false,\n                showsHorizontalScrollIndicator: false,\n                children: _jsx(View, {\n                  style: {\n                    flexDirection: \"row\",\n                    flex: 1,\n                    paddingLeft: 20\n                  },\n                  children: _this3.state.popularMovies.map(function (item, index) {\n                    return index < 4 ? _jsx(MovieItem, {\n                      item: item,\n                      context: context\n                    }, item.id) : _jsx(View, {}, item.id);\n                  })\n                })\n              }), _jsxs(View, {\n                style: {\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  paddingHorizontal: 20,\n                  marginVertical: 15\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    fontFamily: \"poppins-r\",\n                    color: isDarkMode ? light.bg : dark.bg\n                  },\n                  children: IMLocalized(\"recentmovies\")\n                }), _jsx(TouchableWithoutFeedback, {\n                  onPress: function onPress() {\n                    return _this3.props.navigation.navigate(\"ViewAll\", {\n                      genres: _this3.genres,\n                      isPopular: false\n                    });\n                  },\n                  children: _jsxs(View, {\n                    style: {\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"center\"\n                    },\n                    children: [_jsx(Text, {\n                      style: {\n                        fontFamily: \"poppins-sb\",\n                        color: isDarkMode ? light.bg : dark.bg\n                      },\n                      children: IMLocalized(\"viewall\")\n                    }), _jsx(MaterialCommunityIcons, {\n                      name: \"chevron-right\",\n                      color: isDarkMode ? light.bg : dark.bg,\n                      size: 20\n                    })]\n                  })\n                })]\n              }), _jsx(View, {\n                style: {\n                  paddingHorizontal: 20\n                },\n                children: _this3.state.recentMovies.map(function (item, index) {\n                  return index < 4 ? _jsx(RecentMovieItem, {\n                    item: item,\n                    context: context\n                  }, item.id) : _jsx(View, {}, item.id);\n                })\n              })]\n            })]\n          });\n        }\n      });\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport { Home as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight + 10\n  },\n  header: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 20,\n    zIndex: 3\n  },\n  title: {\n    fontSize: 22,\n    fontFamily: \"poppins-sb\"\n  },\n  rectangle: {\n    height: 40\n  }\n});","map":{"version":3,"sources":["D:/DOCUMENTS/moviereact-master/app/pages/Home.js"],"names":["React","Component","Movie","MovieItem","RecentMovieItem","Constants","MaterialCommunityIcons","ThemeContext","StatusBar","TouchableWithoutFeedback","Autocomplete","IMLocalized","Home","props","deviceWidth","Dimensions","get","width","_isMount","baseUrl","apiKey","genres","state","recentMovies","popularMovies","queryResult","query","iconName","isAnimating","fadeAnim","Animated","Value","searchData","fetch","then","response","json","responseJson","moviedata","allgenres","results","forEach","movie","genre_ids","genreid","genreData","filter","x","id","length","push","name","title","poster_path","backdrop_path","overview","popularity","release_date","vote_average","vote_count","setState","catch","error","console","handleSelect","_value","timing","toValue","duration","useNativeDriver","start","renderRectangle","context","isDarkMode","light","dark","customStyle","styles","rectangle","height","justifyContent","bg","data","container","backgroundColor","header","flexWrap","flexDirection","marginRight","color","fontFamily","item","i","toString","paddingHorizontal","position","top","Platform","OS","paddingLeft","borderWidth","maxHeight","zIndex","text","navigation","navigate","flex","marginBottom","uri","marginLeft","alignItems","marginVertical","isPopular","map","index","StyleSheet","create","paddingTop","statusBarHeight","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Animated,\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  ScrollView,\n  Dimensions,\n} from \"react-native\";\nimport Movie from \"../models/Movie\";\nimport MovieItem from \"../components/MovieItem\";\nimport RecentMovieItem from \"../components/RecentMovieItem\";\nRecentMovieItem;\nimport Constants from \"expo-constants\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport Autocomplete from \"react-native-autocomplete-input\";\nimport { IMLocalized } from \"../IMLocalized\";\nexport default class Home extends Component {\n  deviceWidth = Dimensions.get(\"window\").width;\n  _isMount = false;\n  baseUrl = \"http://api.themoviedb.org/3/movie/\";\n  apiKey = \"802b2c4b88ea1183e50e6b285a27696e\";\n  genres = [];\n  state = {\n    recentMovies: [],\n    popularMovies: [],\n    recentMovies: [],\n    queryResult: [],\n    query: \"\",\n    iconName: \"magnify\",\n    isAnimating: false,\n    fadeAnim: new Animated.Value(24),\n  };\n\n  constructor(props) {\n    super(props);\n    this.genres = props.genres;\n  }\n\n  searchData = (query) => {\n    return fetch(\n      \"https://api.themoviedb.org/3/search/movie?api_key=\" +\n        this.apiKey +\n        \"&language=en-US&query=\" +\n        query\n    )\n      .then((response) => response.json())\n      .then((responseJson) => {\n        const moviedata = [];\n        var allgenres = this.genres;\n        responseJson.results.forEach((movie) => {\n          movie.genres = [];\n          movie.genre_ids.forEach((genreid) => {\n            var genreData = allgenres.filter((x) => x.id == genreid);\n            if (genreData.length != 0) {\n              movie.genres.push(genreData[0].name);\n            }\n          });\n\n          moviedata.push(\n            new Movie({\n              id: movie.id,\n              title: movie.title,\n              poster_path:\n                movie.poster_path == null\n                  ? \"https://lightning.od-cdn.com/25.2.6-build-2536-master/public/img/no-cover_en_US.jpg\"\n                  : \"http://image.tmdb.org/t/p/w342/\" + movie.poster_path,\n              backdrop_path:\n                \"http://image.tmdb.org/t/p/w500/\" + movie.backdrop_path,\n              genre_ids: movie.genre_ids,\n              overview: movie.overview,\n              popularity: movie.popularity,\n              release_date: movie.release_date,\n              vote_average: movie.vote_average,\n              vote_count: movie.vote_count,\n              genres: movie.genres,\n            })\n          );\n\n          this.setState({ query: query, queryResult: moviedata });\n        });\n      })\n      .catch((error) => console.error(error));\n  };\n\n  componentDidMount() {\n    this._isMount = true;\n\n    return fetch(this.baseUrl + \"popular?api_key=\" + this.apiKey)\n      .then((response) => response.json())\n      .then((responseJson) => {\n        const data = [];\n        var allgenres = this.genres;\n        responseJson.results.forEach((movie) => {\n          movie.genres = [];\n          movie.genre_ids.forEach((genreid) => {\n            var genreData = allgenres.filter((x) => x.id == genreid);\n            if (genreData.length != 0) {\n              movie.genres.push(genreData[0].name);\n            }\n          });\n\n          data.push(\n            new Movie({\n              id: movie.id,\n              title: movie.title,\n              poster_path:\n                movie.poster_path == null\n                  ? \"https://lightning.od-cdn.com/25.2.6-build-2536-master/public/img/no-cover_en_US.jpg\"\n                  : \"http://image.tmdb.org/t/p/w342/\" + movie.poster_path,\n              backdrop_path:\n                \"http://image.tmdb.org/t/p/w500/\" + movie.backdrop_path,\n              genre_ids: movie.genre_ids,\n              overview: movie.overview,\n              popularity: movie.popularity,\n              release_date: movie.release_date,\n              vote_average: movie.vote_average,\n              vote_count: movie.vote_count,\n              genres: movie.genres,\n            })\n          );\n        });\n\n        if (this._isMount) {\n          this.setState({\n            popularMovies: data,\n          });\n        }\n\n        fetch(this.baseUrl + \"now_playing?api_key=\" + this.apiKey)\n          .then((response) => response.json())\n          .then((responseJson) => {\n            const data = [];\n            var allgenres = this.genres;\n            responseJson.results.forEach((movie) => {\n              movie.genres = [];\n              movie.genre_ids.forEach((genreid) => {\n                var genreData = allgenres.filter((x) => x.id == genreid);\n                if (genreData.length != 0) {\n                  movie.genres.push(genreData[0].name);\n                }\n              });\n              data.push(\n                new Movie({\n                  id: movie.id,\n                  title: movie.title,\n                  poster_path:\n                    movie.poster_path == null\n                      ? \"https://lightning.od-cdn.com/25.2.6-build-2536-master/public/img/no-cover_en_US.jpg\"\n                      : \"http://image.tmdb.org/t/p/w342/\" + movie.poster_path,\n                  backdrop_path:\n                    \"http://image.tmdb.org/t/p/w500/\" + movie.backdrop_path,\n                  genre_ids: movie.genre_ids,\n                  overview: movie.overview,\n                  popularity: movie.popularity,\n                  release_date: movie.release_date,\n                  vote_average: movie.vote_average,\n                  vote_count: movie.vote_count,\n                  genres: movie.genres,\n                })\n              );\n            });\n\n            if (this._isMount) {\n              this.setState({\n                recentMovies: data,\n              });\n            }\n          })\n          .catch((error) => console.error(error));\n      })\n      .catch((error) => console.error(error));\n  }\n\n  componentWillUnmount() {\n    this._isMount = false;\n  }\n\n  handleSelect = () => {\n    this.setState({ isAnimating: true });\n\n    this.state.fadeAnim._value != this.deviceWidth - 24\n      ? Animated.timing(this.state.fadeAnim, {\n          toValue: this.deviceWidth - 24,\n          duration: 500,\n          useNativeDriver: false,\n        }).start(() => {\n          this.setState({ iconName: \"close\" });\n          this.setState({ isAnimating: false });\n        })\n      : Animated.timing(this.state.fadeAnim, {\n          toValue: 24,\n          duration: 500,\n          useNativeDriver: false,\n        }).start(() => {\n          this.setState({ iconName: \"magnify\", query: \"\", queryResult: [] });\n          this.setState({ isAnimating: false });\n        });\n  };\n\n  renderRectangle = (context) => {\n    const { isDarkMode, light, dark } = context;\n    const customStyle = {\n      width: this.state.fadeAnim,\n    };\n\n    return (\n      <Animated.View style={[styles.rectangle, customStyle]}>\n        <TouchableWithoutFeedback\n          style={{\n            width: 24,\n            height: 40,\n            justifyContent: \"center\",\n          }}\n          onPress={() => this.handleSelect()}\n        >\n          <MaterialCommunityIcons\n            name={this.state.iconName}\n            color={isDarkMode ? light.bg : dark.bg}\n            size={24}\n          />\n        </TouchableWithoutFeedback>\n      </Animated.View>\n    );\n  };\n\n  render() {\n    return (\n      <ThemeContext.Consumer>\n        {(context) => {\n          const { isDarkMode, light, dark } = context;\n\n          return (\n            <View\n              style={[\n                styles.container,\n                { backgroundColor: isDarkMode ? dark.bg : light.bg },\n              ]}\n            >\n              <StatusBar style={isDarkMode ? \"light\" : \"dark\"} />\n              <View style={styles.header}>\n                {!this.state.isAnimating && this.state.iconName == \"magnify\" ? (\n                  <View\n                    style={{\n                      flexWrap: \"wrap\",\n                      justifyContent: \"center\",\n                      flexDirection: \"row\",\n                    }}\n                  >\n                    <MaterialCommunityIcons\n                      style={{ marginRight: 5 }}\n                      name=\"movie\"\n                      color={isDarkMode ? light.bg : dark.bg}\n                      size={30}\n                    />\n                    <Text\n                      style={[\n                        styles.title,\n                        { color: isDarkMode ? light.bg : dark.bg },\n                      ]}\n                    >\n                      Movie Catch\n                    </Text>\n                  </View>\n                ) : (\n                  <View />\n                )}\n                <View style={{ flexWrap: \"wrap\" }}>\n                  {this.renderRectangle(context)}\n                </View>\n              </View>\n              {!this.state.isAnimating && this.state.iconName == \"close\" ? (\n                <Autocomplete\n                  style={{\n                    backgroundColor: \"transparent\",\n                    fontFamily: \"poppins-l\",\n                  }}\n                  data={this.state.queryResult}\n                  placeholder={IMLocalized(\"searchhint\")}\n                  autoFocus={true}\n                  placeholderTextColor={isDarkMode ? light.bg : dark.bg}\n                  keyExtractor={(item, i) => item.id.toString()}\n                  containerStyle={{\n                    paddingHorizontal: 20,\n                    position: \"absolute\",\n                    top: Platform.OS == \"ios\" ? 65 : 40,\n                    paddingLeft: 60,\n                    height: 40,\n                    width: \"100%\",\n                  }}\n                  inputContainerStyle={{\n                    borderWidth: 0,\n                    height: 40,\n                  }}\n                  listStyle={{\n                    maxHeight: 300,\n                    zIndex: 999,\n                  }}\n                  onChangeText={(text) => {\n                    this.searchData(text);\n                  }}\n                  renderItem={({ item, i }) => (\n                    <TouchableWithoutFeedback\n                      onPress={() => {\n                        this.props.navigation.navigate(\"MovieDetail\", {\n                          item: item,\n                        });\n                      }}\n                    >\n                      <View\n                        style={{\n                          flex: 1,\n                          flexDirection: \"row\",\n                          marginBottom: 10,\n                        }}\n                      >\n                        <Image\n                          style={{ width: 38, height: 57 }}\n                          source={{ uri: item.poster_path }}\n                        />\n                        <View\n                          style={{\n                            flexWrap: \"wrap\",\n                            flexDirection: \"column\",\n                            marginLeft: 5,\n                            justifyContent: \"center\",\n                          }}\n                        >\n                          <Text>{item.title}</Text>\n                          <Text>{item.release_date}</Text>\n                        </View>\n                      </View>\n                    </TouchableWithoutFeedback>\n                  )}\n                />\n              ) : (\n                <View />\n              )}\n\n              <ScrollView scrollEnabled={this.state.query == \"\" ? true : false}>\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    paddingHorizontal: 20,\n                    marginVertical: 15,\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontFamily: \"poppins-r\",\n                      color: isDarkMode ? light.bg : dark.bg,\n                    }}\n                  >\n                    {IMLocalized(\"popularmovies\")}\n                  </Text>\n                  <TouchableWithoutFeedback\n                    onPress={() =>\n                      this.props.navigation.navigate(\"ViewAll\", {\n                        genres: this.genres,\n                        isPopular: true,\n                      })\n                    }\n                  >\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Text\n                        style={{\n                          fontFamily: \"poppins-sb\",\n                          color: isDarkMode ? light.bg : dark.bg,\n                        }}\n                      >\n                        {IMLocalized(\"viewall\")}\n                      </Text>\n                      <MaterialCommunityIcons\n                        name=\"chevron-right\"\n                        size={20}\n                        color={isDarkMode ? light.bg : dark.bg}\n                      />\n                    </View>\n                  </TouchableWithoutFeedback>\n                </View>\n                <ScrollView\n                  horizontal={true}\n                  scrollEnabled={this.state.query == \"\" ? true : false}\n                  showsHorizontalScrollIndicator={false}\n                >\n                  <View\n                    style={{ flexDirection: \"row\", flex: 1, paddingLeft: 20 }}\n                  >\n                    {this.state.popularMovies.map((item, index) => {\n                      return index < 4 ? (\n                        <MovieItem\n                          key={item.id}\n                          item={item}\n                          context={context}\n                        />\n                      ) : (\n                        <View key={item.id} />\n                      );\n                    })}\n                  </View>\n                </ScrollView>\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    paddingHorizontal: 20,\n                    marginVertical: 15,\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontFamily: \"poppins-r\",\n                      color: isDarkMode ? light.bg : dark.bg,\n                    }}\n                  >\n                    {IMLocalized(\"recentmovies\")}\n                  </Text>\n                  <TouchableWithoutFeedback\n                    onPress={() =>\n                      this.props.navigation.navigate(\"ViewAll\", {\n                        genres: this.genres,\n                        isPopular: false,\n                      })\n                    }\n                  >\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        flexWrap: \"wrap\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Text\n                        style={{\n                          fontFamily: \"poppins-sb\",\n                          color: isDarkMode ? light.bg : dark.bg,\n                        }}\n                      >\n                        {IMLocalized(\"viewall\")}\n                      </Text>\n                      <MaterialCommunityIcons\n                        name=\"chevron-right\"\n                        color={isDarkMode ? light.bg : dark.bg}\n                        size={20}\n                      />\n                    </View>\n                  </TouchableWithoutFeedback>\n                </View>\n\n                <View style={{ paddingHorizontal: 20 }}>\n                  {this.state.recentMovies.map((item, index) => {\n                    return index < 4 ? (\n                      <RecentMovieItem\n                        key={item.id}\n                        item={item}\n                        context={context}\n                      />\n                    ) : (\n                      <View key={item.id} />\n                    );\n                  })}\n                </View>\n              </ScrollView>\n            </View>\n          );\n        }}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight + 10,\n  },\n  header: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 20,\n    zIndex: 3,\n  },\n  title: {\n    fontSize: 22,\n    fontFamily: \"poppins-sb\",\n  },\n  rectangle: {\n    height: 40,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}