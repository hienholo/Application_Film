{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport RecentMovieItem from \"../components/RecentMovieItem\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport Movie from \"../models/Movie\";\nimport { StatusBar } from \"expo-status-bar\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Constants from \"expo-constants\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport { IMLocalized } from \"../IMLocalized\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ViewAll = function (_Component) {\n  _inherits(ViewAll, _Component);\n\n  var _super = _createSuper(ViewAll);\n\n  function ViewAll(props) {\n    var _this;\n\n    _classCallCheck(this, ViewAll);\n\n    _this = _super.call(this, props);\n    _this.baseUrl = \"http://api.themoviedb.org/3/movie/\";\n    _this.apiKey = \"802b2c4b88ea1183e50e6b285a27696e\";\n    _this.state = {\n      data: null,\n      isLoading: false,\n      total_pages: 1\n    };\n\n    _this.fetchData = function (page) {\n      _this.setState({\n        isLoading: true\n      });\n\n      if (_this.state.total_pages >= page) {\n        return fetch(_this.baseUrl + (_this.props.route.params.isPopular ? \"popular\" : \"now_playing\") + \"?api_key=\" + _this.apiKey + \"&page=\" + page).then(function (response) {\n          return response.json();\n        }).then(function (responseJson) {\n          var moviedata = page == 1 ? [] : _this.state.data;\n          var allgenres = _this.genres;\n          responseJson.results.forEach(function (movie) {\n            movie.genres = [];\n            movie.genre_ids.forEach(function (genreid) {\n              var genreData = allgenres.filter(function (x) {\n                return x.id == genreid;\n              });\n\n              if (genreData.length != 0) {\n                movie.genres.push(genreData[0].name);\n              }\n            });\n            var item = moviedata.filter(function (x) {\n              return x.id == movie.id;\n            });\n\n            if (item.length == 0) {\n              moviedata.push(new Movie({\n                id: movie.id,\n                title: movie.title,\n                poster_path: movie.poster_path == null ? \"https://lightning.od-cdn.com/25.2.6-build-2536-master/public/img/no-cover_en_US.jpg\" : \"http://image.tmdb.org/t/p/w342/\" + movie.poster_path,\n                backdrop_path: \"http://image.tmdb.org/t/p/w500/\" + movie.backdrop_path,\n                genre_ids: movie.genre_ids,\n                overview: movie.overview,\n                popularity: movie.popularity,\n                release_date: movie.release_date,\n                vote_average: movie.vote_average,\n                vote_count: movie.vote_count,\n                genres: movie.genres\n              }));\n            }\n          });\n\n          if (_this.state.total_pages == 1) {\n            _this.setState({\n              total_pages: responseJson.total_pages\n            });\n          }\n\n          _this.setState({\n            data: moviedata,\n            page: page,\n            isLoading: false\n          });\n        }).catch(function (error) {\n          return console.error(error);\n        });\n      }\n    };\n\n    _this.updatePage = function () {\n      _this.fetchData(_this.state.page + 1);\n    };\n\n    _this.genres = props.route.params.genres;\n    return _this;\n  }\n\n  _createClass(ViewAll, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData(1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.isLoading) {\n        _jsx(View, {\n          style: {\n            paddingVertical: 20\n          },\n          children: _jsx(ActivityIndicator, {\n            animating: true,\n            size: \"large\"\n          })\n        });\n      }\n\n      if (this.state.data == null) {\n        return _jsx(View, {});\n      } else {\n        return _jsx(ThemeContext.Consumer, {\n          children: function children(context) {\n            var isDarkMode = context.isDarkMode,\n                light = context.light,\n                dark = context.dark;\n            return _jsxs(View, {\n              style: [styles.container, {\n                backgroundColor: isDarkMode ? dark.bg : light.bg\n              }],\n              children: [_jsx(StatusBar, {\n                style: isDarkMode ? \"light\" : \"dark\"\n              }), _jsx(TouchableWithoutFeedback, {\n                onPress: function onPress() {\n                  return _this2.props.navigation.pop();\n                },\n                children: _jsxs(View, {\n                  style: {\n                    flexDirection: \"row\",\n                    flexWrap: \"wrap\",\n                    alignItems: \"center\",\n                    paddingLeft: 10\n                  },\n                  children: [_jsx(MaterialCommunityIcons, {\n                    name: \"chevron-left\",\n                    color: isDarkMode ? light.bg : dark.bg,\n                    size: 30\n                  }), _jsx(Text, {\n                    style: [styles.title, {\n                      color: isDarkMode ? light.bg : dark.bg\n                    }],\n                    children: _this2.props.route.params.isPopular ? IMLocalized(\"popularmovies\") : IMLocalized(\"recentmovies\")\n                  })]\n                })\n              }), _jsx(FlatList, {\n                style: {\n                  paddingHorizontal: 20\n                },\n                data: _this2.state.data,\n                keyExtractor: function keyExtractor(item) {\n                  return item.id.toString() + _this2.state.page.toString();\n                },\n                onEndReached: _this2.updatePage,\n                renderItem: function renderItem(_ref) {\n                  var item = _ref.item;\n                  return _jsx(RecentMovieItem, {\n                    item: item,\n                    context: context\n                  });\n                }\n              })]\n            });\n          }\n        });\n      }\n\n      return _jsx(View, {});\n    }\n  }]);\n\n  return ViewAll;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight + 10\n  },\n  header: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 20\n  },\n  title: {\n    fontSize: 22,\n    fontFamily: \"poppins-sb\",\n    marginBottom: 20\n  },\n  nodata: {\n    fontFamily: \"poppins-r\",\n    fontSize: 16\n  }\n});\nexport default ViewAll;","map":{"version":3,"sources":["D:/DOCUMENTS/moviereact-master/app/pages/ViewAll.js"],"names":["React","Component","RecentMovieItem","ThemeContext","Movie","StatusBar","MaterialCommunityIcons","Constants","TouchableWithoutFeedback","IMLocalized","ViewAll","props","baseUrl","apiKey","state","data","isLoading","total_pages","fetchData","page","setState","fetch","route","params","isPopular","then","response","json","responseJson","moviedata","allgenres","genres","results","forEach","movie","genre_ids","genreid","genreData","filter","x","id","length","push","name","item","title","poster_path","backdrop_path","overview","popularity","release_date","vote_average","vote_count","catch","error","console","updatePage","paddingVertical","context","isDarkMode","light","dark","styles","container","backgroundColor","bg","navigation","pop","flexDirection","flexWrap","alignItems","paddingLeft","color","paddingHorizontal","toString","StyleSheet","create","flex","paddingTop","statusBarHeight","header","width","justifyContent","fontSize","fontFamily","marginBottom","nodata"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAQA,OAAOC,eAAP;AACA,SAASC,YAAT;AACA,OAAOC,KAAP;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,sBAAP;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,wBAAT,QAAyC,8BAAzC;AACA,SAASC,WAAT;;;;IACMC,O;;;;;AAUJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AADiB,UATnBC,OASmB,GATT,oCASS;AAAA,UARnBC,MAQmB,GARV,kCAQU;AAAA,UANnBC,KAMmB,GANX;AACNC,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,SAAS,EAAE,KAFL;AAGNC,MAAAA,WAAW,EAAE;AAHP,KAMW;;AAAA,UAKnBC,SALmB,GAKP,UAACC,IAAD,EAAU;AACpB,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;;AACA,UAAI,MAAKF,KAAL,CAAWG,WAAX,IAA0BE,IAA9B,EAAoC;AAClC,eAAOE,KAAK,CACV,MAAKT,OAAL,IACG,MAAKD,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBC,SAAxB,GAAoC,SAApC,GAAgD,aADnD,IAEE,WAFF,GAGE,MAAKX,MAHP,GAIE,QAJF,GAKEM,IANQ,CAAL,CAQJM,IARI,CAQC,UAACC,QAAD;AAAA,iBAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,SARD,EASJF,IATI,CASC,UAACG,YAAD,EAAkB;AACtB,cAAMC,SAAS,GAAGV,IAAI,IAAI,CAAR,GAAY,EAAZ,GAAiB,MAAKL,KAAL,CAAWC,IAA9C;AACA,cAAIe,SAAS,GAAG,MAAKC,MAArB;AACAH,UAAAA,YAAY,CAACI,OAAb,CAAqBC,OAArB,CAA6B,UAACC,KAAD,EAAW;AACtCA,YAAAA,KAAK,CAACH,MAAN,GAAe,EAAf;AACAG,YAAAA,KAAK,CAACC,SAAN,CAAgBF,OAAhB,CAAwB,UAACG,OAAD,EAAa;AACnC,kBAAIC,SAAS,GAAGP,SAAS,CAACQ,MAAV,CAAiB,UAACC,CAAD;AAAA,uBAAOA,CAAC,CAACC,EAAF,IAAQJ,OAAf;AAAA,eAAjB,CAAhB;;AACA,kBAAIC,SAAS,CAACI,MAAV,IAAoB,CAAxB,EAA2B;AACzBP,gBAAAA,KAAK,CAACH,MAAN,CAAaW,IAAb,CAAkBL,SAAS,CAAC,CAAD,CAAT,CAAaM,IAA/B;AACD;AACF,aALD;AAOA,gBAAIC,IAAI,GAAGf,SAAS,CAACS,MAAV,CAAiB,UAACC,CAAD;AAAA,qBAAOA,CAAC,CAACC,EAAF,IAAQN,KAAK,CAACM,EAArB;AAAA,aAAjB,CAAX;;AACA,gBAAII,IAAI,CAACH,MAAL,IAAe,CAAnB,EAAsB;AACpBZ,cAAAA,SAAS,CAACa,IAAV,CACE,IAAItC,KAAJ,CAAU;AACRoC,gBAAAA,EAAE,EAAEN,KAAK,CAACM,EADF;AAERK,gBAAAA,KAAK,EAAEX,KAAK,CAACW,KAFL;AAGRC,gBAAAA,WAAW,EACTZ,KAAK,CAACY,WAAN,IAAqB,IAArB,GACI,qFADJ,GAEI,oCAAoCZ,KAAK,CAACY,WANxC;AAORC,gBAAAA,aAAa,EACX,oCAAoCb,KAAK,CAACa,aARpC;AASRZ,gBAAAA,SAAS,EAAED,KAAK,CAACC,SATT;AAURa,gBAAAA,QAAQ,EAAEd,KAAK,CAACc,QAVR;AAWRC,gBAAAA,UAAU,EAAEf,KAAK,CAACe,UAXV;AAYRC,gBAAAA,YAAY,EAAEhB,KAAK,CAACgB,YAZZ;AAaRC,gBAAAA,YAAY,EAAEjB,KAAK,CAACiB,YAbZ;AAcRC,gBAAAA,UAAU,EAAElB,KAAK,CAACkB,UAdV;AAeRrB,gBAAAA,MAAM,EAAEG,KAAK,CAACH;AAfN,eAAV,CADF;AAmBD;AACF,WA/BD;;AAiCA,cAAI,MAAKjB,KAAL,CAAWG,WAAX,IAA0B,CAA9B,EAAiC;AAC/B,kBAAKG,QAAL,CAAc;AAAEH,cAAAA,WAAW,EAAEW,YAAY,CAACX;AAA5B,aAAd;AACD;;AAED,gBAAKG,QAAL,CAAc;AACZL,YAAAA,IAAI,EAAEc,SADM;AAEZV,YAAAA,IAAI,EAAEA,IAFM;AAGZH,YAAAA,SAAS,EAAE;AAHC,WAAd;AAKD,SAtDI,EAuDJqC,KAvDI,CAuDE,UAACC,KAAD;AAAA,iBAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAX;AAAA,SAvDF,CAAP;AAwDD;AACF,KAjEkB;;AAAA,UAmEnBE,UAnEmB,GAmEN,YAAM;AACjB,YAAKtC,SAAL,CAAe,MAAKJ,KAAL,CAAWK,IAAX,GAAkB,CAAjC;AACD,KArEkB;;AAEjB,UAAKY,MAAL,GAAcpB,KAAK,CAACW,KAAN,CAAYC,MAAZ,CAAmBQ,MAAjC;AAFiB;AAGlB;;;;WAoED,6BAAoB;AAClB,WAAKb,SAAL,CAAe,CAAf;AACD;;;WAED,kBAAS;AAAA;;AACP,UAAI,KAAKJ,KAAL,CAAWE,SAAf,EAA0B;AACxB,aAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEyC,YAAAA,eAAe,EAAE;AAAnB,WAAb;AAAA,oBACE,KAAC,iBAAD;AAAmB,YAAA,SAAS,EAAE,IAA9B;AAAoC,YAAA,IAAI,EAAE;AAA1C;AADF;AAGD;;AAED,UAAI,KAAK3C,KAAL,CAAWC,IAAX,IAAmB,IAAvB,EAA6B;AAC3B,eAAO,KAAC,IAAD,KAAP;AACD,OAFD,MAEO;AACL,eACE,KAAC,YAAD,CAAc,QAAd;AAAA,oBACG,kBAAC2C,OAAD,EAAa;AACZ,gBAAQC,UAAR,GAAoCD,OAApC,CAAQC,UAAR;AAAA,gBAAoBC,KAApB,GAAoCF,OAApC,CAAoBE,KAApB;AAAA,gBAA2BC,IAA3B,GAAoCH,OAApC,CAA2BG,IAA3B;AACA,mBACE,MAAC,IAAD;AACE,cAAA,KAAK,EAAE,CACLC,MAAM,CAACC,SADF,EAEL;AAAEC,gBAAAA,eAAe,EAAEL,UAAU,GAAGE,IAAI,CAACI,EAAR,GAAaL,KAAK,CAACK;AAAhD,eAFK,CADT;AAAA,yBAME,KAAC,SAAD;AAAW,gBAAA,KAAK,EAAEN,UAAU,GAAG,OAAH,GAAa;AAAzC,gBANF,EAOE,KAAC,wBAAD;AACE,gBAAA,OAAO,EAAE;AAAA,yBAAM,MAAI,CAAChD,KAAL,CAAWuD,UAAX,CAAsBC,GAAtB,EAAN;AAAA,iBADX;AAAA,0BAGE,MAAC,IAAD;AACE,kBAAA,KAAK,EAAE;AACLC,oBAAAA,aAAa,EAAE,KADV;AAELC,oBAAAA,QAAQ,EAAE,MAFL;AAGLC,oBAAAA,UAAU,EAAE,QAHP;AAILC,oBAAAA,WAAW,EAAE;AAJR,mBADT;AAAA,6BAQE,KAAC,sBAAD;AACE,oBAAA,IAAI,EAAC,cADP;AAEE,oBAAA,KAAK,EAAEZ,UAAU,GAAGC,KAAK,CAACK,EAAT,GAAcJ,IAAI,CAACI,EAFtC;AAGE,oBAAA,IAAI,EAAE;AAHR,oBARF,EAaE,KAAC,IAAD;AACE,oBAAA,KAAK,EAAE,CACLH,MAAM,CAACjB,KADF,EAEL;AAAE2B,sBAAAA,KAAK,EAAEb,UAAU,GAAGC,KAAK,CAACK,EAAT,GAAcJ,IAAI,CAACI;AAAtC,qBAFK,CADT;AAAA,8BAMG,MAAI,CAACtD,KAAL,CAAWW,KAAX,CAAiBC,MAAjB,CAAwBC,SAAxB,GACGf,WAAW,CAAC,eAAD,CADd,GAEGA,WAAW,CAAC,cAAD;AARjB,oBAbF;AAAA;AAHF,gBAPF,EAmCE,KAAC,QAAD;AACE,gBAAA,KAAK,EAAE;AAAEgE,kBAAAA,iBAAiB,EAAE;AAArB,iBADT;AAEE,gBAAA,IAAI,EAAE,MAAI,CAAC3D,KAAL,CAAWC,IAFnB;AAGE,gBAAA,YAAY,EAAE,sBAAC6B,IAAD;AAAA,yBACZA,IAAI,CAACJ,EAAL,CAAQkC,QAAR,KAAqB,MAAI,CAAC5D,KAAL,CAAWK,IAAX,CAAgBuD,QAAhB,EADT;AAAA,iBAHhB;AAME,gBAAA,YAAY,EAAE,MAAI,CAAClB,UANrB;AAOE,gBAAA,UAAU,EAAE,0BAAc;AAAA,sBAAXZ,IAAW,QAAXA,IAAW;AACxB,yBAAO,KAAC,eAAD;AAAiB,oBAAA,IAAI,EAAEA,IAAvB;AAA6B,oBAAA,OAAO,EAAEc;AAAtC,oBAAP;AACD;AATH,gBAnCF;AAAA,cADF;AAiDD;AApDH,UADF;AAwDD;;AAED,aAAO,KAAC,IAAD,KAAP;AACD;;;;EA1JmBzD,S;;AA6JtB,IAAM6D,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,SAAS,EAAE;AACTc,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAEvE,SAAS,CAACwE,eAAV,GAA4B;AAF/B,GADoB;AAK/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAE,MADD;AAENb,IAAAA,aAAa,EAAE,KAFT;AAGNc,IAAAA,cAAc,EAAE,eAHV;AAINT,IAAAA,iBAAiB,EAAE;AAJb,GALuB;AAW/B5B,EAAAA,KAAK,EAAE;AACLsC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE,YAFP;AAGLC,IAAAA,YAAY,EAAE;AAHT,GAXwB;AAgB/BC,EAAAA,MAAM,EAAE;AACNF,IAAAA,UAAU,EAAE,WADN;AAEND,IAAAA,QAAQ,EAAE;AAFJ;AAhBuB,CAAlB,CAAf;AAqBA,eAAezE,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  FlatList,\n  Text,\n  StyleSheet,\n  ActivityIndicator,\n} from \"react-native\";\nimport RecentMovieItem from \"../components/RecentMovieItem\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport Movie from \"../models/Movie\";\nimport { StatusBar } from \"expo-status-bar\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport Constants from \"expo-constants\";\nimport { TouchableWithoutFeedback } from \"react-native-gesture-handler\";\nimport { IMLocalized } from \"../IMLocalized\";\nclass ViewAll extends Component {\n  baseUrl = \"http://api.themoviedb.org/3/movie/\";\n  apiKey = \"802b2c4b88ea1183e50e6b285a27696e\";\n\n  state = {\n    data: null,\n    isLoading: false,\n    total_pages: 1,\n  };\n\n  constructor(props) {\n    super(props);\n    this.genres = props.route.params.genres;\n  }\n\n  fetchData = (page) => {\n    this.setState({ isLoading: true });\n    if (this.state.total_pages >= page) {\n      return fetch(\n        this.baseUrl +\n          (this.props.route.params.isPopular ? \"popular\" : \"now_playing\") +\n          \"?api_key=\" +\n          this.apiKey +\n          \"&page=\" +\n          page\n      )\n        .then((response) => response.json())\n        .then((responseJson) => {\n          const moviedata = page == 1 ? [] : this.state.data;\n          var allgenres = this.genres;\n          responseJson.results.forEach((movie) => {\n            movie.genres = [];\n            movie.genre_ids.forEach((genreid) => {\n              var genreData = allgenres.filter((x) => x.id == genreid);\n              if (genreData.length != 0) {\n                movie.genres.push(genreData[0].name);\n              }\n            });\n\n            var item = moviedata.filter((x) => x.id == movie.id);\n            if (item.length == 0) {\n              moviedata.push(\n                new Movie({\n                  id: movie.id,\n                  title: movie.title,\n                  poster_path:\n                    movie.poster_path == null\n                      ? \"https://lightning.od-cdn.com/25.2.6-build-2536-master/public/img/no-cover_en_US.jpg\"\n                      : \"http://image.tmdb.org/t/p/w342/\" + movie.poster_path,\n                  backdrop_path:\n                    \"http://image.tmdb.org/t/p/w500/\" + movie.backdrop_path,\n                  genre_ids: movie.genre_ids,\n                  overview: movie.overview,\n                  popularity: movie.popularity,\n                  release_date: movie.release_date,\n                  vote_average: movie.vote_average,\n                  vote_count: movie.vote_count,\n                  genres: movie.genres,\n                })\n              );\n            }\n          });\n\n          if (this.state.total_pages == 1) {\n            this.setState({ total_pages: responseJson.total_pages });\n          }\n\n          this.setState({\n            data: moviedata,\n            page: page,\n            isLoading: false,\n          });\n        })\n        .catch((error) => console.error(error));\n    }\n  };\n\n  updatePage = () => {\n    this.fetchData(this.state.page + 1);\n  };\n\n  componentDidMount() {\n    this.fetchData(1);\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      <View style={{ paddingVertical: 20 }}>\n        <ActivityIndicator animating={true} size={\"large\"} />\n      </View>;\n    }\n\n    if (this.state.data == null) {\n      return <View></View>;\n    } else {\n      return (\n        <ThemeContext.Consumer>\n          {(context) => {\n            const { isDarkMode, light, dark } = context;\n            return (\n              <View\n                style={[\n                  styles.container,\n                  { backgroundColor: isDarkMode ? dark.bg : light.bg },\n                ]}\n              >\n                <StatusBar style={isDarkMode ? \"light\" : \"dark\"} />\n                <TouchableWithoutFeedback\n                  onPress={() => this.props.navigation.pop()}\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      alignItems: \"center\",\n                      paddingLeft: 10,\n                    }}\n                  >\n                    <MaterialCommunityIcons\n                      name=\"chevron-left\"\n                      color={isDarkMode ? light.bg : dark.bg}\n                      size={30}\n                    />\n                    <Text\n                      style={[\n                        styles.title,\n                        { color: isDarkMode ? light.bg : dark.bg },\n                      ]}\n                    >\n                      {this.props.route.params.isPopular\n                        ? IMLocalized(\"popularmovies\")\n                        : IMLocalized(\"recentmovies\")}\n                    </Text>\n                  </View>\n                </TouchableWithoutFeedback>\n                <FlatList\n                  style={{ paddingHorizontal: 20 }}\n                  data={this.state.data}\n                  keyExtractor={(item) =>\n                    item.id.toString() + this.state.page.toString()\n                  }\n                  onEndReached={this.updatePage}\n                  renderItem={({ item }) => {\n                    return <RecentMovieItem item={item} context={context} />;\n                  }}\n                />\n              </View>\n            );\n          }}\n        </ThemeContext.Consumer>\n      );\n    }\n\n    return <View></View>;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight + 10,\n  },\n  header: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 20,\n  },\n  title: {\n    fontSize: 22,\n    fontFamily: \"poppins-sb\",\n    marginBottom: 20,\n  },\n  nodata: {\n    fontFamily: \"poppins-r\",\n    fontSize: 16,\n  },\n});\nexport default ViewAll;\n"]},"metadata":{},"sourceType":"module"}