{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport memoize from \"lodash.memoize\";\nimport i18n from \"i18n-js\";\nimport * as Localization from \"expo-localization\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport var translationGetters = {\n  \"en-US\": function enUS() {\n    return require(\"./languages/en.json\");\n  },\n  \"tr-TR\": function trTR() {\n    return require(\"./languages/tr.json\");\n  }\n};\nexport var translationGettersIOS = {\n  en: function en() {\n    return require(\"./languages/en.json\");\n  },\n  tr: function tr() {\n    return require(\"./languages/tr.json\");\n  }\n};\nexport var IMLocalized = memoize(function (key, config) {\n  return i18n.t(key, config).includes(\"missing\") ? key : i18n.t(key, config);\n}, function (key, config) {\n  return config ? key + JSON.stringify(config) : key;\n});\nexport var init = function init() {\n  var localeLanguageTag = Localization.locale;\n  var isRTL = Localization.isRTL;\n  IMLocalized.cache.clear();\n  I18nManager.forceRTL(isRTL);\n  i18n.translations = _defineProperty({}, localeLanguageTag, Platform.OS == \"ios\" ? translationGettersIOS[localeLanguageTag]() : translationGetters[localeLanguageTag]());\n  i18n.locale = localeLanguageTag;\n};","map":{"version":3,"sources":["D:/DOCUMENTS/moviereact-master/app/IMLocalized.js"],"names":["memoize","i18n","Localization","translationGetters","require","translationGettersIOS","en","tr","IMLocalized","key","config","t","includes","JSON","stringify","init","localeLanguageTag","locale","isRTL","cache","clear","I18nManager","forceRTL","translations","Platform","OS"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,KAAKC,YAAZ,MAA8B,mBAA9B;;;AAGA,OAAO,IAAMC,kBAAkB,GAAG;AAChC,WAAS;AAAA,WAAMC,OAAO,uBAAb;AAAA,GADuB;AAEhC,WAAS;AAAA,WAAMA,OAAO,uBAAb;AAAA;AAFuB,CAA3B;AAKP,OAAO,IAAMC,qBAAqB,GAAG;AACnCC,EAAAA,EAAE,EAAE;AAAA,WAAMF,OAAO,uBAAb;AAAA,GAD+B;AAEnCG,EAAAA,EAAE,EAAE;AAAA,WAAMH,OAAO,uBAAb;AAAA;AAF+B,CAA9B;AAKP,OAAO,IAAMI,WAAW,GAAGR,OAAO,CAChC,UAACS,GAAD,EAAMC,MAAN;AAAA,SACET,IAAI,CAACU,CAAL,CAAOF,GAAP,EAAYC,MAAZ,EAAoBE,QAApB,CAA6B,SAA7B,IAA0CH,GAA1C,GAAgDR,IAAI,CAACU,CAAL,CAAOF,GAAP,EAAYC,MAAZ,CADlD;AAAA,CADgC,EAGhC,UAACD,GAAD,EAAMC,MAAN;AAAA,SAAkBA,MAAM,GAAGD,GAAG,GAAGI,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAT,GAAkCD,GAA1D;AAAA,CAHgC,CAA3B;AAMP,OAAO,IAAMM,IAAI,GAAG,SAAPA,IAAO,GAAM;AACxB,MAAIC,iBAAiB,GAAGd,YAAY,CAACe,MAArC;AACA,MAAIC,KAAK,GAAGhB,YAAY,CAACgB,KAAzB;AACAV,EAAAA,WAAW,CAACW,KAAZ,CAAkBC,KAAlB;AACAC,EAAAA,WAAW,CAACC,QAAZ,CAAqBJ,KAArB;AACAjB,EAAAA,IAAI,CAACsB,YAAL,uBACGP,iBADH,EAEIQ,QAAQ,CAACC,EAAT,IAAe,KAAf,GACIpB,qBAAqB,CAACW,iBAAD,CAArB,EADJ,GAEIb,kBAAkB,CAACa,iBAAD,CAAlB,EAJR;AAMAf,EAAAA,IAAI,CAACgB,MAAL,GAAcD,iBAAd;AACD,CAZM","sourcesContent":["import memoize from \"lodash.memoize\";\nimport i18n from \"i18n-js\";\nimport * as Localization from \"expo-localization\";\nimport { I18nManager, Platform } from \"react-native\";\n\nexport const translationGetters = {\n  \"en-US\": () => require(\"./languages/en.json\"),\n  \"tr-TR\": () => require(\"./languages/tr.json\"),\n};\n\nexport const translationGettersIOS = {\n  en: () => require(\"./languages/en.json\"),\n  tr: () => require(\"./languages/tr.json\"),\n};\n\nexport const IMLocalized = memoize(\n  (key, config) =>\n    i18n.t(key, config).includes(\"missing\") ? key : i18n.t(key, config),\n  (key, config) => (config ? key + JSON.stringify(config) : key)\n);\n\nexport const init = () => {\n  let localeLanguageTag = Localization.locale;\n  let isRTL = Localization.isRTL;\n  IMLocalized.cache.clear();\n  I18nManager.forceRTL(isRTL);\n  i18n.translations = {\n    [localeLanguageTag]:\n      Platform.OS == \"ios\"\n        ? translationGettersIOS[localeLanguageTag]()\n        : translationGetters[localeLanguageTag](),\n  };\n  i18n.locale = localeLanguageTag;\n};\n"]},"metadata":{},"sourceType":"module"}