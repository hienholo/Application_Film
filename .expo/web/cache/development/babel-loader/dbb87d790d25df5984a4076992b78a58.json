{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport { IS_ANDROID, IS_LT_LOLLIPOP, noop } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Touchable = function Touchable(_ref) {\n  var onPress = _ref.onPress,\n      style = _ref.style,\n      children = _ref.children;\n\n  if (IS_ANDROID && !IS_LT_LOLLIPOP) {\n    return _jsx(TouchableNativeFeedback, {\n      background: TouchableNativeFeedback.SelectableBackgroundBorderless(),\n      onPress: onPress,\n      children: _jsx(View, {\n        style: style,\n        children: children\n      })\n    });\n  }\n\n  return _jsx(TouchableOpacity, {\n    onPress: onPress,\n    style: style,\n    children: children\n  });\n};\n\nTouchable.propTypes = {\n  onPress: PropTypes.func,\n  style: ViewPropTypes.style,\n  children: PropTypes.node.isRequired\n};\nTouchable.defaultProps = {\n  onPress: noop,\n  style: {}\n};\nexport default Touchable;","map":{"version":3,"sources":["D:/DOCUMENTS/moviereact-master/node_modules/react-native-snackbar-component/src/Touchable.js"],"names":["React","PropTypes","ViewPropTypes","IS_ANDROID","IS_LT_LOLLIPOP","noop","Touchable","onPress","style","children","TouchableNativeFeedback","SelectableBackgroundBorderless","propTypes","func","node","isRequired","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;SAKEC,a;AAEF,SACEC,UADF,EAEEC,cAFF,EAGEC,IAHF;;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAkC;AAAA,MAA/BC,OAA+B,QAA/BA,OAA+B;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAClD,MAAIN,UAAU,IAAI,CAACC,cAAnB,EAAmC;AACjC,WACE,KAAC,uBAAD;AACE,MAAA,UAAU,EAAEM,uBAAuB,CAACC,8BAAxB,EADd;AAEE,MAAA,OAAO,EAAEJ,OAFX;AAAA,gBAIE,KAAC,IAAD;AACE,QAAA,KAAK,EAAEC,KADT;AAAA,kBAGGC;AAHH;AAJF,MADF;AAYD;;AAED,SACE,KAAC,gBAAD;AACE,IAAA,OAAO,EAAEF,OADX;AAEE,IAAA,KAAK,EAAEC,KAFT;AAAA,cAIGC;AAJH,IADF;AAQD,CAxBD;;AA0BAH,SAAS,CAACM,SAAV,GAAsB;AACpBL,EAAAA,OAAO,EAAEN,SAAS,CAACY,IADC;AAEpBL,EAAAA,KAAK,EAAEN,aAAa,CAACM,KAFD;AAGpBC,EAAAA,QAAQ,EAAER,SAAS,CAACa,IAAV,CAAeC;AAHL,CAAtB;AAMAT,SAAS,CAACU,YAAV,GAAyB;AACvBT,EAAAA,OAAO,EAAEF,IADc;AAEvBG,EAAAA,KAAK,EAAE;AAFgB,CAAzB;AAKA,eAAeF,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  TouchableOpacity,\n  TouchableNativeFeedback,\n  ViewPropTypes,\n} from 'react-native';\nimport {\n  IS_ANDROID,\n  IS_LT_LOLLIPOP,\n  noop,\n} from './utils';\n\nconst Touchable = ({ onPress, style, children }) => {\n  if (IS_ANDROID && !IS_LT_LOLLIPOP) {\n    return (\n      <TouchableNativeFeedback\n        background={TouchableNativeFeedback.SelectableBackgroundBorderless()}\n        onPress={onPress}\n      >\n        <View\n          style={style}\n        >\n          {children}\n        </View>\n      </TouchableNativeFeedback>\n    );\n  }\n\n  return (\n    <TouchableOpacity\n      onPress={onPress}\n      style={style}\n    >\n      {children}\n    </TouchableOpacity>\n  );\n};\n\nTouchable.propTypes = {\n  onPress: PropTypes.func,\n  style: ViewPropTypes.style,\n  children: PropTypes.node.isRequired,\n};\n\nTouchable.defaultProps = {\n  onPress: noop,\n  style: {},\n};\n\nexport default Touchable;\n"]},"metadata":{},"sourceType":"module"}