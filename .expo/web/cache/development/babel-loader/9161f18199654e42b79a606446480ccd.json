{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport YoutubePlayer from \"react-native-youtube-iframe\";\nimport Constants from \"expo-constants\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport ChipGroup from \"./../components/ChipGroup\";\nimport TeaserTrailer from \"./../models/TeaserTrailer\";\nimport TrailerItem from \"../components/TrailerItem\";\nimport * as SQLite from \"expo-sqlite\";\nimport * as FileSystem from \"expo-file-system\";\nimport { IMLocalized } from \"../IMLocalized\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport Cast from \"./../models/Cast\";\nimport CastItem from \"../components/CastItem\";\nimport * as Notifications from \"expo-notifications\";\nimport Moment from \"moment\";\nvar db = SQLite.openDatabase(\"movie.db\");\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport SnackBar from \"react-native-snackbar-component\";\nimport moment from \"moment\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MovieDetail = function (_Component) {\n  _inherits(MovieDetail, _Component);\n\n  var _super = _createSuper(MovieDetail);\n\n  function MovieDetail(props) {\n    var _this;\n\n    _classCallCheck(this, MovieDetail);\n\n    _this = _super.call(this, props);\n    _this.movieItem = null;\n    _this.baseUrl = \"http://api.themoviedb.org/3/movie/\";\n    _this.apiKey = \"802b2c4b88ea1183e50e6b285a27696e\";\n    _this.scrollHeight = 0;\n    _this.triggerValue = \"15\";\n\n    _this.getTriggerValue = function _callee() {\n      var value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"triggerValue\"));\n\n            case 3:\n              value = _context.sent;\n\n              if (!(value == null)) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"triggerValue\", \"15\"));\n\n            case 7:\n              _context.next = 10;\n              break;\n\n            case 9:\n              _this.triggerValue = value;\n\n            case 10:\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 12]], Promise);\n    };\n\n    _this.state = {\n      teaserTrailers: [],\n      activeMovieTrailerKey: \"\",\n      modalVisible: false,\n      isFavorite: false,\n      castResults: [],\n      isShow: true,\n      isVisibleMessage: false,\n      messageText: \"\"\n    };\n\n    _this.checkDate = function () {\n      var d = Moment(_this.movieItem.release_date);\n      var current = Date.now();\n      var now = moment(current);\n      var duration = moment.duration(d.diff(now));\n      var days = duration.asDays();\n\n      if (days <= 0) {\n        _this.setState({\n          isShow: false\n        });\n      }\n    };\n\n    _this.setFavoriteAlarm = function _callee2() {\n      var addForDay, addForMin, year, month, days, hours, min, sec, releaseDate, movieDay, movieTrigger, dayString;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              addForDay = _this.triggerValue != \"15\" && _this.triggerValue != \"30\" ? Number.parseInt(_this.triggerValue) : 0;\n              addForMin = _this.triggerValue != \"1\" && _this.triggerValue != \"2\" ? Number.parseInt(_this.triggerValue) : 0;\n              year = _this.movieItem.release_date.split(\"-\")[0];\n              month = _this.movieItem.release_date.split(\"-\")[1];\n              days = Number.parseInt(_this.movieItem.release_date.split(\"-\")[2]) + addForDay;\n              hours = new Date().getHours();\n              min = new Date().getMinutes() + addForMin;\n              sec = new Date().getSeconds();\n              releaseDate = year + \"-\" + month + \"-\" + days;\n              movieDay = Date.parse(releaseDate);\n              movieTrigger = new Date(movieDay);\n              movieTrigger.setMinutes(min);\n              movieTrigger.setHours(hours);\n              movieTrigger.setSeconds(sec);\n              movieTrigger.setMilliseconds(0);\n              dayString = _this.triggerValue == 15 || _this.triggerValue == 30 ? IMLocalized(\"today\") : IMLocalized(\"tomorrow\");\n              _context2.next = 18;\n              return _regeneratorRuntime.awrap(Notifications.scheduleNotificationAsync({\n                content: {\n                  title: \"Movie Catch\",\n                  body: dayString + \", \" + _this.movieItem.title + \" \" + IMLocalized(\"notbody\"),\n                  data: _this.movieItem\n                },\n                trigger: movieTrigger,\n                identifier: _this.movieItem.id.toString()\n              }));\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.cancelFavoriteAlarm = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(Notifications.cancelScheduledNotificationAsync(_this.movieItem.id.toString()));\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.downloadFile = function _callee4(data, process) {\n      var movieDir, dirInfo, fileUri, uri, downloadObject, response;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              movieDir = FileSystem.documentDirectory + \"/\" + data.id + \"/\";\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(FileSystem.getInfoAsync(movieDir));\n\n            case 3:\n              dirInfo = _context4.sent;\n\n              if (dirInfo.exists) {\n                _context4.next = 7;\n                break;\n              }\n\n              _context4.next = 7;\n              return _regeneratorRuntime.awrap(FileSystem.makeDirectoryAsync(movieDir, {\n                intermediates: true\n              }));\n\n            case 7:\n              fileUri = movieDir + (process == 1 ? \"poster_path.jpg\" : \"backdrop_path.jpg\");\n              uri = process == 1 ? data.poster_path : data.backdrop_path;\n              downloadObject = FileSystem.createDownloadResumable(uri, fileUri);\n              _context4.next = 12;\n              return _regeneratorRuntime.awrap(downloadObject.downloadAsync());\n\n            case 12:\n              response = _context4.sent;\n              return _context4.abrupt(\"return\", response);\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.deleteItem = function _callee5(data) {\n      var movieDir;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              movieDir = FileSystem.documentDirectory + \"/\" + data.id + \"/\";\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(FileSystem.deleteAsync(movieDir));\n\n            case 3:\n              db.transaction(function (tx) {\n                tx.executeSql(\"DELETE FROM Favorites WHERE movie_id = ? \", [data.id], function (txObj, resultSet) {\n                  if (resultSet.rowsAffected > 0) {\n                    _this.setState({\n                      isFavorite: false\n                    });\n\n                    _this.setMessage(2);\n\n                    _this.cancelFavoriteAlarm();\n                  }\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.addItem = function _callee6(data) {\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(_this.downloadFile(data, 1).then(function (response) {\n                if (response.status == 200) {\n                  _this.downloadFile(data, 2).then(function (response) {\n                    if (response.status == 200) {\n                      if (data.genresString == undefined) {\n                        data.genresString = \"\";\n                        data.genresString += data.genres.map(function (item, index) {\n                          return item;\n                        });\n                      }\n\n                      db.transaction(function (tx) {\n                        tx.executeSql(\"INSERT INTO Favorites (movie_id, title, genres, overview, popularity, release_date, vote_average, vote_count) values (?, ?, ?, ?, ?, ?, ?, ?)\", [data.id, data.title, data.genresString, data.overview, data.popularity, data.release_date, data.vote_average, data.vote_count], function (txObj, resultSet) {\n                          _this.setState({\n                            isFavorite: true\n                          });\n\n                          _this.setMessage(1);\n\n                          _this.setFavoriteAlarm();\n                        }, function (txObj, error) {\n                          return console.log(\"Error\", error);\n                        });\n                      });\n                    }\n                  });\n                }\n              }));\n\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.setMessage = function _callee7(process) {\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (process == 1) {\n                _this.setState({\n                  messageText: IMLocalized(\"movieadd\")\n                });\n              } else {\n                _this.setState({\n                  messageText: IMLocalized(\"movieremove\")\n                });\n              }\n\n              _this.setState({\n                isVisibleMessage: true\n              });\n\n              _context7.next = 4;\n              return _regeneratorRuntime.awrap(new Promise(function (resolve) {\n                return setTimeout(resolve, 2000);\n              }));\n\n            case 4:\n              _this.setState({\n                isVisibleMessage: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.movieItem = props.route.params.item;\n\n    _this.readMovieData(_this.movieItem);\n\n    var topSpace = Constants.statusBarHeight + 10;\n    _this.scrollHeight = Dimensions.get(\"screen\").height - (Platform.OS == \"ios\" ? 0 : topSpace) - 70;\n\n    _this.getTriggerValue();\n\n    return _this;\n  }\n\n  _createClass(MovieDetail, [{\n    key: \"readMovieData\",\n    value: function readMovieData(data) {\n      var _this2 = this;\n\n      db.transaction(function (tx) {\n        tx.executeSql(\"SELECT * FROM Favorites WHERE movie_id = ?\", [data.id], function (txObj, _ref) {\n          var _array = _ref.rows._array;\n\n          if (_array.length != 0) {\n            _this2.setState({\n              isFavorite: true\n            });\n          } else {}\n        }, function (txObj, error) {\n          return console.error(error);\n        });\n      });\n    }\n  }, {\n    key: \"favoriteProcess\",\n    value: function favoriteProcess(data) {\n      if (this.state.isFavorite) {\n        this.deleteItem(data);\n      } else {\n        this.addItem(data);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.checkDate();\n      return fetch(this.baseUrl + this.movieItem.id + \"/videos?api_key=\" + this.apiKey).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        var items = [];\n        responseJson.results.map(function (movie) {\n          items.push(new TeaserTrailer({\n            key: movie.key,\n            name: movie.name,\n            type: movie.type\n          }));\n        });\n\n        _this3.setState({\n          teaserTrailers: items\n        });\n\n        fetch(_this3.baseUrl + _this3.movieItem.id + \"/credits?api_key=\" + _this3.apiKey).then(function (response) {\n          return response.json();\n        }).then(function (responseJson) {\n          var casts = [];\n          responseJson.cast.map(function (cast) {\n            casts.push(new Cast({\n              id: cast.id,\n              name: cast.name,\n              profile_path: cast.profile_path,\n              character: cast.character\n            }));\n          });\n\n          _this3.setState({\n            castResults: casts\n          });\n        }).catch(function (error) {\n          return console.error(error);\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return _jsx(ThemeContext.Consumer, {\n        children: function children(context) {\n          var isDarkMode = context.isDarkMode,\n              light = context.light,\n              dark = context.dark;\n          return _jsxs(View, {\n            style: styles.container,\n            children: [_jsx(StatusBar, {\n              style: isDarkMode ? \"light\" : \"dark\"\n            }), _jsx(SnackBar, {\n              visible: _this4.state.isVisibleMessage,\n              textMessage: _this4.state.messageText,\n              backgroundColor: isDarkMode ? light.bg : dark.bg,\n              messageColor: isDarkMode ? dark.bg : light.bg\n            }), _jsx(Modal, {\n              style: {\n                position: \"absolute\",\n                top: 0\n              },\n              animationType: \"slide\",\n              transparent: true,\n              statusBarTranslucent: true,\n              visible: _this4.state.modalVisible,\n              onRequestClose: function onRequestClose() {\n                _this4.setState({\n                  modalVisible: false\n                });\n              },\n              children: _jsxs(View, {\n                style: {\n                  flex: 1,\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  backgroundColor: \"#000\"\n                },\n                children: [_jsx(TouchableWithoutFeedback, {\n                  onPress: function onPress() {\n                    return _this4.setState({\n                      modalVisible: false\n                    });\n                  },\n                  children: _jsx(View, {\n                    style: {\n                      backgroundColor: \"#222\",\n                      width: 48,\n                      height: 48,\n                      position: \"absolute\",\n                      top: Constants.statusBarHeight + 10,\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      left: 20,\n                      borderRadius: 10\n                    },\n                    children: _jsx(MaterialCommunityIcons, {\n                      name: \"close\",\n                      size: 20,\n                      color: \"white\"\n                    })\n                  })\n                }), _jsx(View, {\n                  style: {\n                    width: \"100%\"\n                  },\n                  children: _jsx(YoutubePlayer, {\n                    play: true,\n                    height: 270,\n                    videoId: _this4.state.activeMovieTrailerKey\n                  })\n                })]\n              })\n            }), _jsx(Image, {\n              style: styles.poster,\n              resizeMode: \"cover\",\n              source: {\n                uri: _this4.movieItem.backdrop_path\n              }\n            }), _jsx(View, {\n              style: {\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                width: \"100%\",\n                height: \"100%\"\n              },\n              children: _jsx(LinearGradient, {\n                colors: [\"#ffffff03\", isDarkMode ? dark.bg : light.bg, isDarkMode ? \"#000\" : light.bg],\n                start: {\n                  x: 0,\n                  y: 0\n                },\n                end: {\n                  x: 0,\n                  y: Platform.OS == \"ios\" ? 0.6 : 0.7\n                },\n                style: {\n                  height: \"100%\"\n                }\n              })\n            }), _jsxs(View, {\n              style: {\n                position: \"absolute\",\n                top: 0,\n                width: \"100%\",\n                height: \"100%\"\n              },\n              children: [_jsx(TouchableWithoutFeedback, {\n                onPress: function onPress() {\n                  _this4.props.navigation.pop();\n                },\n                children: _jsx(MaterialCommunityIcons, {\n                  style: {\n                    position: \"absolute\",\n                    top: Constants.statusBarHeight + 10,\n                    left: 10,\n                    zIndex: 1,\n                    paddingRight: 20,\n                    paddingBottom: 20\n                  },\n                  name: \"chevron-left\",\n                  size: 24,\n                  color: isDarkMode ? light.bg : dark.bg\n                })\n              }), _this4.state.isShow ? _jsx(TouchableWithoutFeedback, {\n                onPress: function onPress() {\n                  return _this4.favoriteProcess(_this4.movieItem);\n                },\n                children: _jsx(MaterialCommunityIcons, {\n                  style: {\n                    position: \"absolute\",\n                    top: Constants.statusBarHeight + 10,\n                    right: 10,\n                    zIndex: 1,\n                    paddingLeft: 20,\n                    paddingBottom: 20\n                  },\n                  name: _this4.state.isFavorite ? \"heart\" : \"heart-outline\",\n                  size: 24,\n                  color: isDarkMode ? light.bg : dark.bg\n                })\n              }) : _jsx(View, {}), _jsx(View, {\n                style: {\n                  marginTop: 70,\n                  height: _this4.scrollHeight\n                },\n                children: _jsxs(ScrollView, {\n                  children: [_jsx(View, {\n                    style: styles.posterSpace\n                  }), _jsxs(View, {\n                    style: {\n                      flex: 1,\n                      padding: 20\n                    },\n                    children: [_jsxs(View, {\n                      style: {\n                        flex: 1,\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                        marginBottom: 10\n                      },\n                      children: [_jsxs(View, {\n                        style: {\n                          flexWrap: \"wrap\",\n                          flexDirection: \"column\"\n                        },\n                        children: [_jsx(Text, {\n                          style: [styles.title, {\n                            color: isDarkMode ? light.bg : dark.bg\n                          }],\n                          children: _this4.movieItem.title\n                        }), _jsx(Text, {\n                          style: [styles.subtitle, {\n                            color: isDarkMode ? light.bg : dark.bg\n                          }],\n                          children: _this4.movieItem.release_date\n                        })]\n                      }), _jsx(View, {\n                        style: [styles.ratingBadge, {\n                          backgroundColor: isDarkMode ? light.bg : dark.bg\n                        }],\n                        children: _jsx(Text, {\n                          style: [styles.rating, {\n                            color: isDarkMode ? dark.bg : light.bg\n                          }],\n                          children: _this4.movieItem.vote_average\n                        })\n                      })]\n                    }), _jsx(ChipGroup, {\n                      datas: _this4.movieItem.genres,\n                      context: context\n                    }), _jsx(Text, {\n                      style: [styles.header, {\n                        color: isDarkMode ? light.bg : dark.bg\n                      }],\n                      children: IMLocalized(\"overview\")\n                    }), _jsx(Text, {\n                      style: {\n                        fontFamily: \"poppins-l\",\n                        fontSize: 15,\n                        textAlign: \"justify\",\n                        color: isDarkMode ? light.bg : dark.bg\n                      },\n                      children: _this4.movieItem.overview\n                    }), _jsx(Text, {\n                      style: [styles.header, {\n                        color: isDarkMode ? light.bg : dark.bg\n                      }],\n                      children: IMLocalized(\"teaserstrailers\")\n                    }), _jsx(View, {\n                      style: {\n                        flexWrap: \"wrap\",\n                        flexDirection: \"row\"\n                      },\n                      children: _this4.state.teaserTrailers.map(function (item, index) {\n                        return _jsx(TrailerItem, {\n                          poster: _this4.movieItem.backdrop_path,\n                          context: context,\n                          onPressFunction: function onPressFunction() {\n                            _this4.setState({\n                              modalVisible: true,\n                              activeMovieTrailerKey: item.key\n                            });\n                          },\n                          data: item,\n                          modalVisible: _this4.state.modalVisible,\n                          itemIndex: index\n                        }, item.key);\n                      })\n                    }), _jsxs(View, {\n                      style: {\n                        justifyContent: \"space-between\",\n                        flexDirection: \"row\",\n                        flex: 1,\n                        alignItems: \"center\"\n                      },\n                      children: [_jsx(Text, {\n                        style: [styles.header, {\n                          color: isDarkMode ? light.bg : dark.bg\n                        }],\n                        children: IMLocalized(\"casts\")\n                      }), _jsx(TouchableWithoutFeedback, {\n                        onPress: function onPress() {\n                          return _this4.props.navigation.navigate(\"CastViewAll\", {\n                            movieid: _this4.movieItem.id\n                          });\n                        },\n                        children: _jsxs(View, {\n                          style: {\n                            flexDirection: \"row\",\n                            flexWrap: \"wrap\",\n                            alignItems: \"center\"\n                          },\n                          children: [_jsx(Text, {\n                            style: {\n                              fontFamily: \"poppins-sb\",\n                              color: isDarkMode ? light.bg : dark.bg\n                            },\n                            children: IMLocalized(\"viewall\")\n                          }), _jsx(MaterialCommunityIcons, {\n                            name: \"chevron-right\",\n                            size: 20,\n                            color: isDarkMode ? light.bg : dark.bg\n                          })]\n                        })\n                      })]\n                    }), _jsx(ScrollView, {\n                      children: _this4.state.castResults.map(function (cast, index) {\n                        return index < 4 ? _jsx(CastItem, {\n                          cast: cast,\n                          context: context\n                        }, cast.id) : _jsx(View, {}, cast.id);\n                      })\n                    })]\n                  })]\n                })\n              })]\n            })]\n          });\n        }\n      });\n    }\n  }]);\n\n  return MovieDetail;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  rating: {\n    fontFamily: \"poppins-sb\",\n    marginTop: 4\n  },\n  ratingBadge: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  subtitle: {\n    fontSize: 14,\n    fontFamily: \"poppins-l\"\n  },\n  poster: {\n    height: 281\n  },\n  posterSpace: {\n    height: 210\n  },\n  title: {\n    fontSize: 17,\n    fontFamily: \"poppins-r\"\n  },\n  header: {\n    fontSize: 20,\n    fontFamily: \"poppins-sb\",\n    marginTop: 10\n  }\n});\nexport default MovieDetail;","map":{"version":3,"sources":["D:/DOCUMENTS/moviereact-master/app/pages/MovieDetail.js"],"names":["React","Component","YoutubePlayer","Constants","MaterialCommunityIcons","ScrollView","ChipGroup","TeaserTrailer","TrailerItem","SQLite","FileSystem","IMLocalized","LinearGradient","ThemeContext","Cast","CastItem","Notifications","Moment","db","openDatabase","AsyncStorage","SnackBar","moment","MovieDetail","props","movieItem","baseUrl","apiKey","scrollHeight","triggerValue","getTriggerValue","getItem","value","setItem","console","error","state","teaserTrailers","activeMovieTrailerKey","modalVisible","isFavorite","castResults","isShow","isVisibleMessage","messageText","checkDate","d","release_date","current","Date","now","duration","diff","days","asDays","setState","setFavoriteAlarm","addForDay","Number","parseInt","addForMin","year","split","month","hours","getHours","min","getMinutes","sec","getSeconds","releaseDate","movieDay","parse","movieTrigger","setMinutes","setHours","setSeconds","setMilliseconds","dayString","scheduleNotificationAsync","content","title","body","data","trigger","identifier","id","toString","cancelFavoriteAlarm","cancelScheduledNotificationAsync","downloadFile","process","movieDir","documentDirectory","getInfoAsync","dirInfo","exists","makeDirectoryAsync","intermediates","fileUri","uri","poster_path","backdrop_path","downloadObject","createDownloadResumable","downloadAsync","response","deleteItem","deleteAsync","transaction","tx","executeSql","txObj","resultSet","rowsAffected","setMessage","addItem","then","status","genresString","undefined","genres","map","item","index","overview","popularity","vote_average","vote_count","log","Promise","resolve","setTimeout","route","params","readMovieData","topSpace","statusBarHeight","Dimensions","get","height","Platform","OS","_array","rows","length","fetch","json","responseJson","items","results","movie","push","key","name","type","casts","cast","profile_path","character","catch","context","isDarkMode","light","dark","styles","container","bg","position","top","flex","alignItems","justifyContent","backgroundColor","width","left","borderRadius","poster","x","y","navigation","pop","zIndex","paddingRight","paddingBottom","favoriteProcess","right","paddingLeft","marginTop","posterSpace","padding","flexDirection","marginBottom","flexWrap","color","subtitle","ratingBadge","rating","header","fontFamily","fontSize","textAlign","navigate","movieid","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  Modal,\n  StatusBar,\n  Dimensions,\n  Platform,\n} from \"react-native\";\nimport YoutubePlayer from \"react-native-youtube-iframe\";\nimport Constants from \"expo-constants\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport ChipGroup from \"./../components/ChipGroup\";\nimport TeaserTrailer from \"./../models/TeaserTrailer\";\nimport TrailerItem from \"../components/TrailerItem\";\nimport * as SQLite from \"expo-sqlite\";\nimport * as FileSystem from \"expo-file-system\";\nimport { IMLocalized } from \"../IMLocalized\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport Cast from \"./../models/Cast\";\nimport CastItem from \"../components/CastItem\";\nimport * as Notifications from \"expo-notifications\";\nimport Moment from \"moment\";\nconst db = SQLite.openDatabase(\"movie.db\");\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport SnackBar from \"react-native-snackbar-component\";\nimport moment from \"moment\";\nclass MovieDetail extends Component {\n  movieItem = null;\n  baseUrl = \"http://api.themoviedb.org/3/movie/\";\n  apiKey = \"802b2c4b88ea1183e50e6b285a27696e\";\n  scrollHeight = 0;\n  triggerValue = \"15\";\n\n  getTriggerValue = async () => {\n    try {\n      const value = await AsyncStorage.getItem(\"triggerValue\");\n      if (value == null) {\n        await AsyncStorage.setItem(\"triggerValue\", \"15\");\n      } else {\n        this.triggerValue = value;\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this.movieItem = props.route.params.item;\n    this.readMovieData(this.movieItem);\n    var topSpace = Constants.statusBarHeight + 10;\n    this.scrollHeight =\n      Dimensions.get(\"screen\").height -\n      (Platform.OS == \"ios\" ? 0 : topSpace) -\n      70;\n    this.getTriggerValue();\n  }\n\n  state = {\n    teaserTrailers: [],\n    activeMovieTrailerKey: \"\",\n    modalVisible: false,\n    isFavorite: false,\n    castResults: [],\n    isShow: true,\n    isVisibleMessage: false,\n    messageText: \"\",\n  };\n\n  checkDate = () => {\n    var d = Moment(this.movieItem.release_date);\n    var current = Date.now();\n\n    var now = moment(current);\n\n    var duration = moment.duration(d.diff(now));\n    var days = duration.asDays();\n\n    if (days <= 0) {\n      this.setState({ isShow: false });\n    }\n  };\n\n  readMovieData(data) {\n    db.transaction((tx) => {\n      tx.executeSql(\n        \"SELECT * FROM Favorites WHERE movie_id = ?\",\n        [data.id],\n        (txObj, { rows: { _array } }) => {\n          if (_array.length != 0) {\n            this.setState({ isFavorite: true });\n          } else {\n            // console.log(\"data yok\");\n          }\n        },\n        (txObj, error) => console.error(error)\n      );\n    });\n  }\n\n  setFavoriteAlarm = async () => {\n    var addForDay =\n      this.triggerValue != \"15\" && this.triggerValue != \"30\"\n        ? Number.parseInt(this.triggerValue)\n        : 0;\n\n    var addForMin =\n      this.triggerValue != \"1\" && this.triggerValue != \"2\"\n        ? Number.parseInt(this.triggerValue)\n        : 0;\n\n    var year = this.movieItem.release_date.split(\"-\")[0];\n    var month = this.movieItem.release_date.split(\"-\")[1];\n    var days =\n      Number.parseInt(this.movieItem.release_date.split(\"-\")[2]) + addForDay;\n    var hours = new Date().getHours();\n    var min = new Date().getMinutes() + addForMin;\n    var sec = new Date().getSeconds();\n    var releaseDate = year + \"-\" + month + \"-\" + days;\n    var movieDay = Date.parse(releaseDate);\n    const movieTrigger = new Date(movieDay);\n    movieTrigger.setMinutes(min);\n    movieTrigger.setHours(hours);\n    movieTrigger.setSeconds(sec);\n    movieTrigger.setMilliseconds(0);\n    //console.log(movieTrigger);\n    var dayString =\n      this.triggerValue == 15 || this.triggerValue == 30\n        ? IMLocalized(\"today\")\n        : IMLocalized(\"tomorrow\");\n    await Notifications.scheduleNotificationAsync({\n      content: {\n        title: \"Movie Catch\",\n        body:\n          dayString +\n          \", \" +\n          this.movieItem.title +\n          \" \" +\n          IMLocalized(\"notbody\"),\n        data: this.movieItem,\n      },\n      trigger: movieTrigger,\n      identifier: this.movieItem.id.toString(),\n    });\n  };\n\n  cancelFavoriteAlarm = async () => {\n    await Notifications.cancelScheduledNotificationAsync(\n      this.movieItem.id.toString()\n    );\n  };\n\n  downloadFile = async (data, process) => {\n    const movieDir = FileSystem.documentDirectory + \"/\" + data.id + \"/\";\n    const dirInfo = await FileSystem.getInfoAsync(movieDir);\n    if (!dirInfo.exists) {\n      await FileSystem.makeDirectoryAsync(movieDir, { intermediates: true });\n    }\n    const fileUri =\n      movieDir + (process == 1 ? \"poster_path.jpg\" : \"backdrop_path.jpg\");\n\n    const uri = process == 1 ? data.poster_path : data.backdrop_path;\n    let downloadObject = FileSystem.createDownloadResumable(uri, fileUri);\n    let response = await downloadObject.downloadAsync();\n    return response;\n  };\n\n  deleteItem = async (data) => {\n    const movieDir = FileSystem.documentDirectory + \"/\" + data.id + \"/\";\n    await FileSystem.deleteAsync(movieDir);\n    db.transaction((tx) => {\n      tx.executeSql(\n        \"DELETE FROM Favorites WHERE movie_id = ? \",\n        [data.id],\n        (txObj, resultSet) => {\n          if (resultSet.rowsAffected > 0) {\n            //Delete operation\n            this.setState({ isFavorite: false });\n            this.setMessage(2);\n            this.cancelFavoriteAlarm();\n          }\n        }\n      );\n    });\n  };\n\n  addItem = async (data) => {\n    await this.downloadFile(data, 1).then((response) => {\n      //TODO: poster_path download\n      if (response.status == 200) {\n        this.downloadFile(data, 2).then((response) => {\n          //TODO: backdrop_path download\n          if (response.status == 200) {\n            if (data.genresString == undefined) {\n              data.genresString = \"\";\n              data.genresString += data.genres.map((item, index) => item);\n            }\n            db.transaction((tx) => {\n              tx.executeSql(\n                \"INSERT INTO Favorites (movie_id, title, genres, overview, popularity, release_date, vote_average, vote_count) values (?, ?, ?, ?, ?, ?, ?, ?)\",\n                [\n                  data.id,\n                  data.title,\n                  data.genresString,\n                  data.overview,\n                  data.popularity,\n                  data.release_date,\n                  data.vote_average,\n                  data.vote_count,\n                ],\n                (txObj, resultSet) => {\n                  this.setState({ isFavorite: true });\n                  this.setMessage(1);\n                  this.setFavoriteAlarm();\n                },\n                (txObj, error) => console.log(\"Error\", error)\n              );\n            });\n          }\n        });\n      }\n    });\n  };\n\n  setMessage = async (process) => {\n    //TODO: process  1 = ekleme , 2 = çıkarma\n    if (process == 1) {\n      this.setState({ messageText: IMLocalized(\"movieadd\") });\n    } else {\n      this.setState({ messageText: IMLocalized(\"movieremove\") });\n    }\n\n    this.setState({ isVisibleMessage: true });\n    await new Promise((resolve) => setTimeout(resolve, 2000));\n    this.setState({ isVisibleMessage: false });\n  };\n\n  favoriteProcess(data) {\n    if (this.state.isFavorite) {\n      //TODO: delete\n      this.deleteItem(data);\n    } else {\n      //TODO: insert\n      this.addItem(data);\n    }\n  }\n\n  componentDidMount() {\n    this.checkDate();\n    return fetch(\n      this.baseUrl + this.movieItem.id + \"/videos?api_key=\" + this.apiKey\n    )\n      .then((response) => response.json())\n      .then((responseJson) => {\n        var items = [];\n        responseJson.results.map((movie) => {\n          items.push(\n            new TeaserTrailer({\n              key: movie.key,\n              name: movie.name,\n              type: movie.type,\n            })\n          );\n        });\n\n        this.setState({ teaserTrailers: items });\n\n        fetch(\n          this.baseUrl + this.movieItem.id + \"/credits?api_key=\" + this.apiKey\n        )\n          .then((response) => response.json())\n          .then((responseJson) => {\n            var casts = [];\n            responseJson.cast.map((cast) => {\n              casts.push(\n                new Cast({\n                  id: cast.id,\n                  name: cast.name,\n                  profile_path: cast.profile_path,\n                  character: cast.character,\n                })\n              );\n            });\n            this.setState({ castResults: casts });\n          })\n          .catch((error) => console.error(error));\n      })\n      .catch((error) => console.error(error));\n  }\n\n  render() {\n    return (\n      <ThemeContext.Consumer>\n        {(context) => {\n          const { isDarkMode, light, dark } = context;\n          return (\n            <View style={styles.container}>\n              <StatusBar style={isDarkMode ? \"light\" : \"dark\"} />\n              <SnackBar\n                visible={this.state.isVisibleMessage}\n                textMessage={this.state.messageText}\n                backgroundColor={isDarkMode ? light.bg : dark.bg}\n                messageColor={isDarkMode ? dark.bg : light.bg}\n              />\n              <Modal\n                style={{ position: \"absolute\", top: 0 }}\n                animationType=\"slide\"\n                transparent={true}\n                statusBarTranslucent={true}\n                visible={this.state.modalVisible}\n                onRequestClose={() => {\n                  this.setState({ modalVisible: false });\n                }}\n              >\n                <View\n                  style={{\n                    flex: 1,\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    backgroundColor: \"#000\",\n                  }}\n                >\n                  <TouchableWithoutFeedback\n                    onPress={() => this.setState({ modalVisible: false })}\n                  >\n                    <View\n                      style={{\n                        backgroundColor: \"#222\",\n                        width: 48,\n                        height: 48,\n                        position: \"absolute\",\n                        top: Constants.statusBarHeight + 10,\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        left: 20,\n                        borderRadius: 10,\n                      }}\n                    >\n                      <MaterialCommunityIcons\n                        name=\"close\"\n                        size={20}\n                        color={\"white\"}\n                      />\n                    </View>\n                  </TouchableWithoutFeedback>\n\n                  <View style={{ width: \"100%\" }}>\n                    <YoutubePlayer\n                      play={true}\n                      height={270}\n                      videoId={this.state.activeMovieTrailerKey}\n                    />\n                  </View>\n                </View>\n              </Modal>\n              <Image\n                style={styles.poster}\n                resizeMode={\"cover\"}\n                source={{\n                  uri: this.movieItem.backdrop_path,\n                }}\n              />\n              <View\n                style={{\n                  position: \"absolute\",\n                  top: 0,\n                  left: 0,\n                  width: \"100%\",\n                  height: \"100%\",\n                }}\n              >\n                <LinearGradient\n                  colors={[\n                    \"#ffffff03\",\n                    isDarkMode ? dark.bg : light.bg,\n                    isDarkMode ? \"#000\" : light.bg,\n                  ]}\n                  start={{ x: 0, y: 0 }}\n                  end={{ x: 0, y: Platform.OS == \"ios\" ? 0.6 : 0.7 }}\n                  style={{ height: \"100%\" }}\n                ></LinearGradient>\n              </View>\n\n              <View\n                style={{\n                  position: \"absolute\",\n                  top: 0,\n                  width: \"100%\",\n                  height: \"100%\",\n                }}\n              >\n                <TouchableWithoutFeedback\n                  onPress={() => {\n                    this.props.navigation.pop();\n                  }}\n                >\n                  <MaterialCommunityIcons\n                    style={{\n                      position: \"absolute\",\n                      top: Constants.statusBarHeight + 10,\n                      left: 10,\n                      zIndex: 1,\n                      paddingRight: 20,\n                      paddingBottom: 20,\n                    }}\n                    name=\"chevron-left\"\n                    size={24}\n                    color={isDarkMode ? light.bg : dark.bg}\n                  />\n                </TouchableWithoutFeedback>\n                {this.state.isShow ? (\n                  <TouchableWithoutFeedback\n                    onPress={() => this.favoriteProcess(this.movieItem)}\n                  >\n                    <MaterialCommunityIcons\n                      style={{\n                        position: \"absolute\",\n                        top: Constants.statusBarHeight + 10,\n                        right: 10,\n                        zIndex: 1,\n                        paddingLeft: 20,\n                        paddingBottom: 20,\n                      }}\n                      name={this.state.isFavorite ? \"heart\" : \"heart-outline\"}\n                      size={24}\n                      color={isDarkMode ? light.bg : dark.bg}\n                    />\n                  </TouchableWithoutFeedback>\n                ) : (\n                  <View />\n                )}\n                <View\n                  style={{\n                    marginTop: 70,\n                    height: this.scrollHeight,\n                  }}\n                >\n                  <ScrollView>\n                    <View style={styles.posterSpace} />\n                    <View\n                      style={{\n                        flex: 1,\n                        padding: 20,\n                      }}\n                    >\n                      <View\n                        style={{\n                          flex: 1,\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                          alignItems: \"center\",\n                          marginBottom: 10,\n                        }}\n                      >\n                        <View\n                          style={{ flexWrap: \"wrap\", flexDirection: \"column\" }}\n                        >\n                          <Text\n                            style={[\n                              styles.title,\n                              { color: isDarkMode ? light.bg : dark.bg },\n                            ]}\n                          >\n                            {this.movieItem.title}\n                          </Text>\n                          <Text\n                            style={[\n                              styles.subtitle,\n                              { color: isDarkMode ? light.bg : dark.bg },\n                            ]}\n                          >\n                            {this.movieItem.release_date}\n                          </Text>\n                        </View>\n                        <View\n                          style={[\n                            styles.ratingBadge,\n                            {\n                              backgroundColor: isDarkMode ? light.bg : dark.bg,\n                            },\n                          ]}\n                        >\n                          <Text\n                            style={[\n                              styles.rating,\n                              { color: isDarkMode ? dark.bg : light.bg },\n                            ]}\n                          >\n                            {this.movieItem.vote_average}\n                          </Text>\n                        </View>\n                      </View>\n\n                      <ChipGroup\n                        datas={this.movieItem.genres}\n                        context={context}\n                      />\n                      <Text\n                        style={[\n                          styles.header,\n                          { color: isDarkMode ? light.bg : dark.bg },\n                        ]}\n                      >\n                        {IMLocalized(\"overview\")}\n                      </Text>\n                      <Text\n                        style={{\n                          fontFamily: \"poppins-l\",\n                          fontSize: 15,\n                          textAlign: \"justify\",\n                          color: isDarkMode ? light.bg : dark.bg,\n                        }}\n                      >\n                        {this.movieItem.overview}\n                      </Text>\n                      <Text\n                        style={[\n                          styles.header,\n                          { color: isDarkMode ? light.bg : dark.bg },\n                        ]}\n                      >\n                        {IMLocalized(\"teaserstrailers\")}\n                      </Text>\n                      <View style={{ flexWrap: \"wrap\", flexDirection: \"row\" }}>\n                        {this.state.teaserTrailers.map((item, index) => {\n                          return (\n                            <TrailerItem\n                              poster={this.movieItem.backdrop_path}\n                              key={item.key}\n                              context={context}\n                              onPressFunction={() => {\n                                this.setState({\n                                  modalVisible: true,\n                                  activeMovieTrailerKey: item.key,\n                                });\n                              }}\n                              data={item}\n                              modalVisible={this.state.modalVisible}\n                              itemIndex={index}\n                            />\n                          );\n                        })}\n                      </View>\n                      <View\n                        style={{\n                          justifyContent: \"space-between\",\n                          flexDirection: \"row\",\n                          flex: 1,\n                          alignItems: \"center\",\n                        }}\n                      >\n                        <Text\n                          style={[\n                            styles.header,\n                            { color: isDarkMode ? light.bg : dark.bg },\n                          ]}\n                        >\n                          {IMLocalized(\"casts\")}\n                        </Text>\n                        <TouchableWithoutFeedback\n                          onPress={() =>\n                            this.props.navigation.navigate(\"CastViewAll\", {\n                              movieid: this.movieItem.id,\n                            })\n                          }\n                        >\n                          <View\n                            style={{\n                              flexDirection: \"row\",\n                              flexWrap: \"wrap\",\n                              alignItems: \"center\",\n                            }}\n                          >\n                            <Text\n                              style={{\n                                fontFamily: \"poppins-sb\",\n                                color: isDarkMode ? light.bg : dark.bg,\n                              }}\n                            >\n                              {IMLocalized(\"viewall\")}\n                            </Text>\n                            <MaterialCommunityIcons\n                              name=\"chevron-right\"\n                              size={20}\n                              color={isDarkMode ? light.bg : dark.bg}\n                            />\n                          </View>\n                        </TouchableWithoutFeedback>\n                      </View>\n                      <ScrollView>\n                        {this.state.castResults.map((cast, index) => {\n                          return index < 4 ? (\n                            <CastItem\n                              cast={cast}\n                              context={context}\n                              key={cast.id}\n                            />\n                          ) : (\n                            <View key={cast.id} />\n                          );\n                        })}\n                      </ScrollView>\n                    </View>\n                  </ScrollView>\n                </View>\n              </View>\n            </View>\n          );\n        }}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n  },\n  rating: {\n    fontFamily: \"poppins-sb\",\n    marginTop: 4,\n  },\n  ratingBadge: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  subtitle: {\n    fontSize: 14,\n    fontFamily: \"poppins-l\",\n  },\n  poster: {\n    height: 281,\n  },\n  posterSpace: {\n    height: 210,\n  },\n  title: {\n    fontSize: 17,\n    fontFamily: \"poppins-r\",\n  },\n  header: {\n    fontSize: 20,\n    fontFamily: \"poppins-sb\",\n    marginTop: 10,\n  },\n});\n\nexport default MovieDetail;\n"]},"metadata":{},"sourceType":"module"}