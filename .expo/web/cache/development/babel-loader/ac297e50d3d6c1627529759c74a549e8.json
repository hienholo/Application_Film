{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar MyTestComp = function (_Component) {\n  _inherits(MyTestComp, _Component);\n\n  var _super = _createSuper(MyTestComp);\n\n  function MyTestComp() {\n    _classCallCheck(this, MyTestComp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyTestComp, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.animatedValue = new Animated.Value(0);\n    }\n  }, {\n    key: \"buttonPress\",\n    value: function buttonPress() {\n      this.animatedValue.setValue(0);\n      Animated.timing(this.animatedValue, {\n        toValue: 1,\n        duration: 1000,\n        Easing: Easing\n      }).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var translateX = this.animatedValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [-500, 1]\n      });\n      var transform = [{\n        translateX: translateX\n      }];\n      return React.createElement(View, null, React.createElement(Text, null, \"MyTestComp\"), React.createElement(Animated.View, {\n        style: transform\n      }, React.createElement(Image, {\n        source: {\n          uri: 'https://th.bing.com/th/id/OIP.pKBpBoHgy1jBsa0BcShwSAHaHa?w=186&h=187&c=7&r=0&o=5&dpr=1.25&pid=1.7'\n        },\n        style: {\n          width: 300,\n          height: 250\n        }\n      })), React.createElement(View, {\n        style: {\n          marginTop: 10\n        }\n      }, React.createElement(Button, {\n        title: \"Click Me\",\n        onPress: function onPress() {\n          return _this.buttonPress();\n        }\n      })));\n    }\n  }]);\n\n  return MyTestComp;\n}(Component);\n\nexport default MyTestComp;","map":{"version":3,"sources":["C:/Users/DÃ©castel/Documents/CoursReactNative-main/components/react-native/im.js"],"names":["React","Component","MyTestComp","animatedValue","Animated","Value","setValue","timing","toValue","duration","Easing","start","translateX","interpolate","inputRange","outputRange","transform","uri","width","height","marginTop","buttonPress"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;IAGMC,U;;;;;;;;;;;;;WACJ,8BAAqB;AACnB,WAAKC,aAAL,GAAqB,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAArB;AACD;;;WACD,uBAAa;AACb,WAAKF,aAAL,CAAmBG,QAAnB,CAA4B,CAA5B;AACEF,MAAAA,QAAQ,CAACG,MAAT,CAAgB,KAAKJ,aAArB,EAAmC;AACjCK,QAAAA,OAAO,EAAC,CADyB;AAEjCC,QAAAA,QAAQ,EAAC,IAFwB;AAGjCC,QAAAA,MAAM,EAAEA;AAHyB,OAAnC,EAIGC,KAJH;AAKD;;;WAED,kBAAS;AAAA;;AAEP,UAAMC,UAAU,GAAG,KAAKT,aAAL,CAAmBU,WAAnB,CAA+B;AAChDC,QAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADoC;AAEhDC,QAAAA,WAAW,EAAE,CAAC,CAAC,GAAF,EAAO,CAAP;AAFmC,OAA/B,CAAnB;AAKA,UAAMC,SAAS,GAAG,CAAC;AAACJ,QAAAA,UAAU,EAAVA;AAAD,OAAD,CAAlB;AAEA,aACE,oBAAC,IAAD,QACE,oBAAC,IAAD,qBADF,EAEE,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,KAAK,EAAEI;AAAtB,SACA,oBAAC,KAAD;AACE,QAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,EAAC;AAAL,SADV;AAEE,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC,GAAP;AAAYC,UAAAA,MAAM,EAAC;AAAnB;AAFT,QADA,CAFF,EAQE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAC;AAAX;AAAb,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAyB,QAAA,OAAO,EAAE;AAAA,iBAAK,KAAI,CAACC,WAAL,EAAL;AAAA;AAAlC,QADF,CARF,CADF;AAcD;;;;EApCsBpB,S;;AAwCzB,eAAeC,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, Text, Image, Animated, Easing, View, Button } from 'react-native';\r\n\r\nclass MyTestComp extends Component {\r\n  componentWillMount() {\r\n    this.animatedValue = new Animated.Value(0);\r\n  }\r\n  buttonPress(){\r\n  this.animatedValue.setValue(0);\r\n    Animated.timing(this.animatedValue,{\r\n      toValue:1,\r\n      duration:1000,\r\n      Easing: Easing\r\n    }).start()\r\n  }\r\n\r\n  render() {\r\n\r\n    const translateX = this.animatedValue.interpolate({\r\n      inputRange: [0, 1],\r\n      outputRange: [-500, 1]\r\n    })\r\n\r\n    const transform = [{translateX}];\r\n\r\n    return (\r\n      <View>\r\n        <Text>MyTestComp</Text>\r\n        <Animated.View style={transform}>\r\n        <Image\r\n          source={{uri:'https://th.bing.com/th/id/OIP.pKBpBoHgy1jBsa0BcShwSAHaHa?w=186&h=187&c=7&r=0&o=5&dpr=1.25&pid=1.7'}}\r\n          style={{width:300, height:250}}\r\n        />\r\n        </Animated.View>\r\n        <View style={{marginTop:10}}>\r\n          <Button title=\"Click Me\" onPress={()=> this.buttonPress()} />\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default MyTestComp;"]},"metadata":{},"sourceType":"module"}